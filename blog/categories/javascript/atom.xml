<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: javascript | Ajia's Blog]]></title>
  <link href="http://ajia.github.com/blog/categories/javascript/atom.xml" rel="self"/>
  <link href="http://ajia.github.com/"/>
  <updated>2014-05-07T16:35:25+08:00</updated>
  <id>http://ajia.github.com/</id>
  <author>
    <name><![CDATA[Ajia]]></name>
    <email><![CDATA[DerekLunt@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[时间格式化插件jquery-dateFormat]]></title>
    <link href="http://ajia.github.com/blog/2013/06/07/shi-jian-ge-shi-hua-cha-jian-jquery-dateformat/"/>
    <updated>2013-06-07T18:01:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/06/07/shi-jian-ge-shi-hua-cha-jian-jquery-dateformat</id>
    <content type="html"><![CDATA[<!-- more -->


<p>做项目难免遇上格式化时间，而且可能不是每个地方都显示成一个样子，所以服务器端做这个不太方便。</p>

<p><a href="https://github.com/phstc/jquery-dateFormat#examples">jquery-dateFormat</a></p>

<h1>Format patterns</h1>

<ul>
<li><p>Date and time patterns</p></li>
<li><p>yy = short year</p></li>
<li><p>yyyy = long year</p></li>
<li><p>M = month (1-12)</p></li>
<li><p>MM = month (01-12)</p></li>
<li><p>MMM = month abbreviation (Jan, Feb … Dec)</p></li>
<li><p>MMMM = long month (January, February … December)</p></li>
<li><p>d = day (1 - 31)</p></li>
<li><p>dd = day (01 - 31)</p></li>
<li><p>ddd = day of the week in words (Monday, Tuesday … Sunday)</p></li>
<li><p>D - Ordinal day (1st, 2nd, 3rd, 21st, 22nd, 23rd, 31st, 4th…)</p></li>
<li><p>h = hour in am/pm (0-12)</p></li>
<li><p>hh = hour in am/pm (00-12)</p></li>
<li><p>H = hour in day (0-23)</p></li>
<li><p>HH = hour in day (00-23)</p></li>
<li><p>mm = minute</p></li>
<li><p>ss = second</p></li>
<li><p>SSS = milliseconds</p></li>
<li><p>a = AM/PM marker</p></li>
<li><p>p = a.m./p.m. marker</p></li>
</ul>


<h1>支持的时间格式</h1>

<ul>
<li><p>2009-12-18 10:54:50.546 (default java.util.Date.toString output)</p></li>
<li><p>Wed Jan 13 10:43:41 CET 2010 (???)</p></li>
<li><p>2010-10-19T11:40:33.527+02:00 (default JAXB formatting of java.util.Date)</p></li>
<li><p>Sat Mar 05 2011 11:47:35 GMT-0300 (BRT) (default JavaScript new Date().toString() output)</p></li>
<li><p>Unix Timestamp (e.g. new Date().getTime())</p></li>
</ul>


<h1>例子</h1>

<p><em>使用css来格式化</em></p>

<pre><code>&lt;span class="shortDateFormat"&gt;2009-12-18 10:54:50.546&lt;/span&gt;
&lt;span class="longDateFormat"&gt;2009-12-18 10:54:50.546&lt;/span&gt;
</code></pre>

<p>默认的shortDateFormat 和 longDateFormat 这样来定义：</p>

<pre><code>jQuery.format.date.defaultShortDateFormat = "dd/MM/yyyy";
jQuery.format.date.defaultLongDateFormat = "dd/MM/yyyy HH:mm:ss";
</code></pre>

<p>输出</p>

<pre><code>#1 18/12/2009
#2 18/12/2009 10:54:50
</code></pre>

<p><em>用javascript来格式化</em></p>

<p>```javascript</p>

<pre><code>&lt;script&gt;
document.write($.format.date("2009-12-18 10:54:50.546", "Test: dd/MM/yyyy"));
document.write($.format.date("Wed Jan 13 10:43:41 CET 2010", "dd~MM~yyyy"));
&lt;/script&gt;
</code></pre>

<p>```</p>

<p>输出</p>

<pre><code>#1 Test: 18/12/2009
#2 18~12~2009
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[数字格式化插件Numeral.js]]></title>
    <link href="http://ajia.github.com/blog/2013/06/07/shu-zi-ge-shi-hua-cha-jian-numeral-dot-js/"/>
    <updated>2013-06-07T18:00:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/06/07/shu-zi-ge-shi-hua-cha-jian-numeral-dot-js</id>
    <content type="html"><![CDATA[<!-- more -->


<p>需要格式化文件大小，发现这个好用的东西，<a href="http://numeraljs.com/">numeral.js</a></p>

<p>首先当然是要引入它</p>

<pre><code>&lt;script src="numeral.min.js"&gt;&lt;/script&gt;
</code></pre>

<p>然后就可以格式化了</p>

<pre><code>var string = numeral(1000).format('0,0');
// '1,000'
</code></pre>

<p>数字的格式化</p>

<pre><code>Number          Format          String
10000           '0,0.0000'      10,000.0000
10000.23        '0,0'           10,000
-10000          '0,0.0'         -10,000.0
10000.1234      '0.000'         10000.123
10000.1234      '0[.]00000'     10000.12340
-10000          '(0,0.0000)'    (10,000.0000)
-0.23           '.00'           -.23
-0.23           '(.00)'         (.23)
0.23            '0.00000'       0.23000
0.23            '0.0[0000]'     0.23
1230974         '0.0a'          1.2m
1460            '0 a'           1 k
-104000         '0a'            -104k
1               '0o'            1st
52              '0o'            52nd
23              '0o'            23rd        
100             '0o'            100th
</code></pre>

<p>货币的格式化</p>

<pre><code>Number          Format          String
1000.234        '$0,0.00'       $1,000.23
1000.2          '0,0[.]00 $'    1,000.20 $
1001            '$ 0,0[.]00'    $ 1,001
-1000.234       '($0,0)'        ($1,000)
-1000.234       '$0.00'         -$1000.23
1230974         '($ 0.00 a)'    $ 1.23 m
</code></pre>

<p>字节的格式化</p>

<pre><code>Number          Format          String
100             '0b'            100B
2048            '0 b'           2 KB
4194304         '0.0b'          2 MB
7884486213      '0.00b'         7.3GB
3467479682787   '0.000 b'       3.154 TB
</code></pre>

<p>百分比</p>

<pre><code>Number          Format          String
1               '0%'            100%
0.974878234     '0.000%'        97.488%
-0.43           '0 %'           -43 %
0.43            '(0.000 %)'     43.000 %
</code></pre>

<p>时间</p>

<pre><code>Number          Format          String
25              '00:00:00'      0:00:25
238             '00:00:00'      0:03:58
63846           '00:00:00'      17:44:06
</code></pre>

<p>还可以反格式化</p>

<pre><code>var string = numeral().unformat('($10,000.00)');
// '-10000'

String          Function                    Number
'10,000.123'    .unformat('10,000.123')     10000.123
'0.12345'       .unformat('0.12345')        0.12345
'1.23m'         .unformat('1.23m')          1230000
'23rd'          .unformat('23rd')           23
'$10,000.00'    .unformat('$10,000.00')     10000
'100B'          .unformat('100B')           100
'3.154TB'       .unformat('3.154TB')        3467859674006
'-76%'          .unformat('-76%')           -0.76
'2:23:57'       .unformat('2:23:57')        8637
</code></pre>

<p>还支持运算</p>

<pre><code>var number = numeral(1000);

var added = number.add(10);
// 1010
Before          Function            After
1000            .add(100)           1100
1100            .subtract(100)      1000
1000            .multiply(100)      100000
100000          .divide(100)        1000
</code></pre>

<p>提供的方法：value 等等...</p>

<pre><code>var number = numeral(1000);

var string = number.format('0,0');
// '1,000'

var value = number.value();
// 1000
</code></pre>

<p>最重要的是还支持中文</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jquery插件之timer]]></title>
    <link href="http://ajia.github.com/blog/2013/05/24/javacha-jian-zhi-timer/"/>
    <updated>2013-05-24T14:20:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/05/24/javacha-jian-zhi-timer</id>
    <content type="html"><![CDATA[<!-- more -->


<p>JQuery Timers应用知识<br/>
提供了三个函式<br/>
1. everyTime(时间间隔, [计时器名称], 函式名称, [次数限制], [等待函式程序完成])</p>

<p>```javascript
/<strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><strong><em>
*   everyTime(时间间隔, [计时器名称], 函式名称, [次数限制], [等待函式程序完成])
</em></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong></strong>/
//每1秒执行函式test()
function test(){
   //do something...
}
$('body').everyTime('1s',test);
//每1秒执行
$('body').everyTime('1s',function(){
//do something...
});
//每1秒执行，并命名计时器名称为A
$('body').everyTime('1s','A',function(){
//do something...
});
//每20秒执行，最多5次，并命名计时器名称为B
$('body').everyTime('2das','B',function(){
//do something...
},5);
//每20秒执行，无限次，并命名计时器名称为C
//若时间间隔抵到，但函式程序仍未完成则需等待执行函式完成后再继续计时
$('body').everyTime('2das','C',function(){</p>

<pre><code>//执行一个会超过20秒以上的程式
</code></pre>

<p>},0,true);
```</p>

<ol>
<li>oneTime(时间间隔, [计时器名称], 呼叫的函式)
```javascript
/***********************************************************</li>
<li>oneTime(时间间隔, [计时器名称], 呼叫的函式)
***********************************************************/
//倒数10秒后执行
$('body').oneTime('1das',function(){
//do something...
});
//倒数100秒后执行，并命名计时器名称为D
$('body').oneTime('1hs','D',function(){
//do something...
});
```</li>
<li>stopTime ([计时器名称], [函式名称])<br/>
```javascript
/************************************************************</li>
<li>stopTime ([计时器名称], [函式名称])
************************************************************/
//停止所有的在$('body')上计时器
$('body').stopTime ();
//停止$('body')上名称为A的计时器
$('body').stopTime ('A');
//停止$('body')上所有呼叫test()的计时器
$('body').stopTime (test);
```</li>
</ol>


<p>自定义时间单位
打开源代码
找到<br/>
<code>javascript
powers: {
   // Yeah this is major overkill...
   'ms': 1,
   'cs': 10,
   'ds': 100,
   's': 1000,
   'das': 10000,
   'hs': 100000,
   'ks': 1000000
  }
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[音乐播放器dewplayer的使用]]></title>
    <link href="http://ajia.github.com/blog/2013/05/04/yin-le-bo-fang-qi-dewplayerde-shi-yong/"/>
    <updated>2013-05-04T15:53:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/05/04/yin-le-bo-fang-qi-dewplayerde-shi-yong</id>
    <content type="html"><![CDATA[<!-- more -->


<p>介绍一个flash音乐播放器：dewplayer(法国的)<br/>
官网地址：http://www.alsacreations.fr/dewplayer.html。它提供几种风格，根据自己的需要选择一种风格。下面说一下用javascript来操作dewplayer</p>

<p>引入swfobject.js<br/>
```javascript</p>

<script type="text/javascript" src="swfobject.js"></script>


<p>```</p>

<p>然后是js代码
```javascript
var dewp = document.getElementById("dewplayerjs");
function play() {</p>

<pre><code>          if(dewp!=null) dewp.dewplay();
        }
        function stop() {
          if(dewp!=null) dewp.dewstop();
        }
        function pause() {
          if(dewp!=null) dewp.dewpause();
        }
        function next() {
          if(dewp!=null) dewp.dewnext();
        }
        function prev() {
          if(dewp!=null) dewp.dewprev();
        }
        function set(file) {
          if(dewp!=null) dewp.dewset(file);
        }
        function go(index) {
          if(dewp!=null) dewp.dewgo(index);
        }
        function setpos(ms) {
          if(dewp!=null) dewp.dewsetpos(ms);
        }
        function getpos() {
          if(dewp!=null) alert(dewp.dewgetpos());
        }
        function volume(val) {
          if(dewp!=null) alert(dewp.dewvolume(val));
        }           
</code></pre>

<p>```</p>

<p>html代码
```html</p>

<pre><code>        &lt;div id="dewplayer_content_js"&gt;
        &lt;object data="dewplayer.swf" width="200" height="20" name="dewplayer" id="dewplayerjs" type="application/x-shockwave-flash"&gt;
        &lt;param name="movie" value="dewplayer.swf" /&gt;
        &lt;param name="flashvars" value="mp3=mp3/test1.mp3|mp3/test2.mp3|mp3/test3.mp3&amp;javascript=on" /&gt;
        &lt;param name="wmode" value="transparent" /&gt;
        &lt;/object&gt;
        &lt;/div&gt;
        &lt;p&gt;
        &lt;input type="button" onclick="play();" value="Play" /&gt;
        &lt;input type="button" onclick="stop();" value="Stop" /&gt;
        &lt;input type="button" onclick="pause();" value="Pause" /&gt;
        &lt;input type="button" onclick="next();" value="Next" /&gt;
        &lt;input type="button" onclick="prev();" value="Prev" /&gt;
        &lt;input type="button" onclick="go(2);" value="Go(2)" /&gt;
        &lt;input type="button" onclick="set('mp3/test2.mp3');" value="Set mp3" /&gt;
        &lt;input type="button" onclick="set('mp3/test3.mp3');" value="Set another mp3" /&gt;
        &lt;input type="button" onclick="setpos(10000);" value="Set position 10 sec" /&gt;
        &lt;input type="button" onclick="getpos();" value="Get position" /&gt;
        &lt;input type="button" onclick="volume(50);" value="Set volume 50%" /&gt;
        &lt;/p&gt;
</code></pre>

<p>```</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jquery插件之cookie]]></title>
    <link href="http://ajia.github.com/blog/2013/04/09/jquerycha-jian-zhi-cookie/"/>
    <updated>2013-04-09T11:59:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/04/09/jquerycha-jian-zhi-cookie</id>
    <content type="html"><![CDATA[<!-- more -->


<p>Create session cookie: <br/>
<code>javascript
$.cookie('the_cookie', 'the_value');
</code>
Create expiring cookie, 7 days:<br/>
<code>javascript
$.cookie('the_cookie', 'the_value', { expires: 7 });
</code>
Create expiring cookie, valid across entire site:<br/>
<code>javascript
$.cookie('the_cookie', 'the_value', { expires: 7, path: '/' });
</code>
Read cookie:<br/>
<code>javascript
$.cookie('the_cookie'); // =&gt; "the_value"
$.cookie('not_existing'); // =&gt; undefined
</code></p>

<p>Read all available cookies:<br/>
<code>javascript
$.cookie(); // =&gt; { "the_cookie": "the_value", "...remaining": "cookies" }
</code></p>

<p>Delete cookie:<br/>
<code>javascript
// Returns true when cookie was found, false when no cookie was found...
$.removeCookie('the_cookie');
// Same path as when the cookie was written...
$.removeCookie('the_cookie', { path: '/' });
</code></p>

<p>{% include_code jquery.cookie.js %}</p>
]]></content>
  </entry>
  
</feed>

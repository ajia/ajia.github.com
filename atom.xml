<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ajia's Blog]]></title>
  <link href="http://ajia.github.com/atom.xml" rel="self"/>
  <link href="http://ajia.github.com/"/>
  <updated>2013-06-18T15:37:04+08:00</updated>
  <id>http://ajia.github.com/</id>
  <author>
    <name><![CDATA[Ajia]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[常用sql]]></title>
    <link href="http://ajia.github.com/blog/2013/06/08/chang-yong-sql/"/>
    <updated>2013-06-08T11:22:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/06/08/chang-yong-sql</id>
    <content type="html"><![CDATA[<h1>查询重复的userid</h1>

<pre><code>select * from WebsiteUser where userid in 
(select userid from WebsiteUser group by userid having(count(*)&gt;1))
</code></pre>

<p>作为记录、待续</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[时间格式化插件jquery-dateFormat]]></title>
    <link href="http://ajia.github.com/blog/2013/06/07/shi-jian-ge-shi-hua-cha-jian-jquery-dateformat/"/>
    <updated>2013-06-07T18:01:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/06/07/shi-jian-ge-shi-hua-cha-jian-jquery-dateformat</id>
    <content type="html"><![CDATA[<p>做项目难免遇上格式化时间，而且可能不是每个地方都显示成一个样子，所以服务器端做这个不太方便。</p>

<p><a href="https://github.com/phstc/jquery-dateFormat#examples">jquery-dateFormat</a></p>

<!-- more -->


<h1>Format patterns</h1>

<ul>
<li><p>Date and time patterns</p></li>
<li><p>yy = short year</p></li>
<li><p>yyyy = long year</p></li>
<li><p>M = month (1-12)</p></li>
<li><p>MM = month (01-12)</p></li>
<li><p>MMM = month abbreviation (Jan, Feb … Dec)</p></li>
<li><p>MMMM = long month (January, February … December)</p></li>
<li><p>d = day (1 - 31)</p></li>
<li><p>dd = day (01 - 31)</p></li>
<li><p>ddd = day of the week in words (Monday, Tuesday … Sunday)</p></li>
<li><p>D - Ordinal day (1st, 2nd, 3rd, 21st, 22nd, 23rd, 31st, 4th…)</p></li>
<li><p>h = hour in am/pm (0-12)</p></li>
<li><p>hh = hour in am/pm (00-12)</p></li>
<li><p>H = hour in day (0-23)</p></li>
<li><p>HH = hour in day (00-23)</p></li>
<li><p>mm = minute</p></li>
<li><p>ss = second</p></li>
<li><p>SSS = milliseconds</p></li>
<li><p>a = AM/PM marker</p></li>
<li><p>p = a.m./p.m. marker</p></li>
</ul>


<h1>支持的时间格式</h1>

<ul>
<li><p>2009-12-18 10:54:50.546 (default java.util.Date.toString output)</p></li>
<li><p>Wed Jan 13 10:43:41 CET 2010 (???)</p></li>
<li><p>2010-10-19T11:40:33.527+02:00 (default JAXB formatting of java.util.Date)</p></li>
<li><p>Sat Mar 05 2011 11:47:35 GMT-0300 (BRT) (default JavaScript new Date().toString() output)</p></li>
<li><p>Unix Timestamp (e.g. new Date().getTime())</p></li>
</ul>


<h1>例子</h1>

<p><em>使用css来格式化</em></p>

<pre><code>&lt;span class="shortDateFormat"&gt;2009-12-18 10:54:50.546&lt;/span&gt;
&lt;span class="longDateFormat"&gt;2009-12-18 10:54:50.546&lt;/span&gt;
</code></pre>

<p>默认的shortDateFormat 和 longDateFormat 这样来定义：</p>

<pre><code>jQuery.format.date.defaultShortDateFormat = "dd/MM/yyyy";
jQuery.format.date.defaultLongDateFormat = "dd/MM/yyyy HH:mm:ss";
</code></pre>

<p>输出</p>

<pre><code>#1 18/12/2009
#2 18/12/2009 10:54:50
</code></pre>

<p><em>用javascript来格式化</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span><span class="o">&gt;</span>
</span><span class='line'>      <span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">format</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="s2">&quot;2009-12-18 10:54:50.546&quot;</span><span class="p">,</span> <span class="s2">&quot;Test: dd/MM/yyyy&quot;</span><span class="p">));</span>
</span><span class='line'>      <span class="nb">document</span><span class="p">.</span><span class="nx">write</span><span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">format</span><span class="p">.</span><span class="nx">date</span><span class="p">(</span><span class="s2">&quot;Wed Jan 13 10:43:41 CET 2010&quot;</span><span class="p">,</span> <span class="s2">&quot;dd~MM~yyyy&quot;</span><span class="p">));</span>
</span><span class='line'><span class="o">&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>输出</p>

<pre><code>#1 Test: 18/12/2009
#2 18~12~2009
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[数字格式化插件Numeral.js]]></title>
    <link href="http://ajia.github.com/blog/2013/06/07/shu-zi-ge-shi-hua-cha-jian-numeral-dot-js/"/>
    <updated>2013-06-07T18:00:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/06/07/shu-zi-ge-shi-hua-cha-jian-numeral-dot-js</id>
    <content type="html"><![CDATA[<p>需要格式化文件大小，发现这个好用的东西，<a href="http://numeraljs.com/">numeral.js</a></p>

<!-- more -->


<p>首先当然是要引入它</p>

<pre><code>&lt;script src="numeral.min.js"&gt;&lt;/script&gt;
</code></pre>

<p>然后就可以格式化了</p>

<pre><code>var string = numeral(1000).format('0,0');
// '1,000'
</code></pre>

<p>数字的格式化</p>

<pre><code>Number          Format          String
10000           '0,0.0000'      10,000.0000
10000.23        '0,0'           10,000
-10000          '0,0.0'         -10,000.0
10000.1234      '0.000'         10000.123
10000.1234      '0[.]00000'     10000.12340
-10000          '(0,0.0000)'    (10,000.0000)
-0.23           '.00'           -.23
-0.23           '(.00)'         (.23)
0.23            '0.00000'       0.23000
0.23            '0.0[0000]'     0.23
1230974         '0.0a'          1.2m
1460            '0 a'           1 k
-104000         '0a'            -104k
1               '0o'            1st
52              '0o'            52nd
23              '0o'            23rd        
100             '0o'            100th
</code></pre>

<p>货币的格式化</p>

<pre><code>Number          Format          String
1000.234        '$0,0.00'       $1,000.23
1000.2          '0,0[.]00 $'    1,000.20 $
1001            '$ 0,0[.]00'    $ 1,001
-1000.234       '($0,0)'        ($1,000)
-1000.234       '$0.00'         -$1000.23
1230974         '($ 0.00 a)'    $ 1.23 m
</code></pre>

<p>字节的格式化</p>

<pre><code>Number          Format          String
100             '0b'            100B
2048            '0 b'           2 KB
4194304         '0.0b'          2 MB
7884486213      '0.00b'         7.3GB
3467479682787   '0.000 b'       3.154 TB
</code></pre>

<p>百分比</p>

<pre><code>Number          Format          String
1               '0%'            100%
0.974878234     '0.000%'        97.488%
-0.43           '0 %'           -43 %
0.43            '(0.000 %)'     43.000 %
</code></pre>

<p>时间</p>

<pre><code>Number          Format          String
25              '00:00:00'      0:00:25
238             '00:00:00'      0:03:58
63846           '00:00:00'      17:44:06
</code></pre>

<p>还可以反格式化</p>

<pre><code>var string = numeral().unformat('($10,000.00)');
// '-10000'

String          Function                    Number
'10,000.123'    .unformat('10,000.123')     10000.123
'0.12345'       .unformat('0.12345')        0.12345
'1.23m'         .unformat('1.23m')          1230000
'23rd'          .unformat('23rd')           23
'$10,000.00'    .unformat('$10,000.00')     10000
'100B'          .unformat('100B')           100
'3.154TB'       .unformat('3.154TB')        3467859674006
'-76%'          .unformat('-76%')           -0.76
'2:23:57'       .unformat('2:23:57')        8637
</code></pre>

<p>还支持运算</p>

<pre><code>var number = numeral(1000);

var added = number.add(10);
// 1010
Before          Function            After
1000            .add(100)           1100
1100            .subtract(100)      1000
1000            .multiply(100)      100000
100000          .divide(100)        1000
</code></pre>

<p>提供的方法：value 等等&#8230;</p>

<pre><code>var number = numeral(1000);

var string = number.format('0,0');
// '1,000'

var value = number.value();
// 1000
</code></pre>

<p>最重要的是还支持中文</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Guava的使用指南之Collections]]></title>
    <link href="http://ajia.github.com/blog/2013/05/31/guavade-shi-yong-zhi-nan-zhi-collections/"/>
    <updated>2013-05-31T13:45:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/05/31/guavade-shi-yong-zhi-nan-zhi-collections</id>
    <content type="html"><![CDATA[<p>Guava Collections可以帮助我们写出更简短精炼、可读性强的代码。看看Guava Collections为我们做了哪些很酷的事情：</p>

<ul>
<li>Immutable Collections:还在使用Collections.unmodifiableXXX()? Immutable Collections这才是真正的不可修改的集合</li>
<li>Multiset:看看如何把重复的元素放入一个集合</li>
<li>Multimaps:需要在一个key对应多个value的时候，自己写一个实现比较繁琐，让Multimaps来帮帮</li>
<li>BiMap:java.util.Map只能保证key的不重复，BiMap保证value也不重复</li>
<li>MapMaker:超级强大的Map构造类</li>
<li>Ordering class:大家知道用Comparator作为比较器来对集合排序，但是对于多关键字排序Ordering class可以简化很多的代码</li>
<li>其他特性</li>
</ul>


<!-- more -->


<p>当然，如果没有Guava Collections你也可以用Java Collections Framework完成上面的功能。但是Guava Collections提供的这些API经过精心设计，而且还有2500个单元测试来保障它的质量。所以我们没必要重新发明轮子。接下来我们来详细看看Guava Collections的一些具体功能。</p>

<h2>Immutable Collections：真正的不可修改的集合</h2>

<p>大家都用过Collections.unmodifiableXXX()来做一个不可修改的集合。例如你要构造存储常量的Set,你可以这样做：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Set</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">set</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;(</span><span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="k">new</span> <span class="n">String</span><span class="o">[]{</span><span class="s">&quot;RED&quot;</span><span class="o">,</span><span class="s">&quot;GREEN&quot;</span><span class="o">}));</span>
</span><span class='line'><span class="n">Set</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">unmodifiableSet</span> <span class="o">=</span> <span class="n">Collections</span><span class="o">.</span><span class="na">unmodifiableSet</span><span class="o">(</span><span class="n">set</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>这看上去似乎不错，因为每次调unmodifiableSet.add()都会抛出一个UnsupportedOperationException。感觉安全了？慢！如果有人在原来的set上add或者remove元素会怎么样？结果unmodifiableSet也是被add或者remove元素了。而且构造这样一个简单的set写了两句长的代码。下面看看ImmutableSet是怎么来做地更安全和简洁：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">ImmutableSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">immutableSet</span> <span class="o">=</span> <span class="n">ImmutableSet</span><span class="o">.</span><span class="na">of</span><span class="o">(</span><span class="s">&quot;RED&quot;</span><span class="o">,</span><span class="s">&quot;GREEN&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>就这样一句就够了，而且试图调add方法的时候，它一样会抛出UnsupportedOperationException。重要的是代码的可读性增强了不少，非常直观的展现了代码的用意。如果像之前这个代码保护一个set怎么做呢？你可以：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">ImmutableSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">immutableSet</span> <span class="o">=</span> <span class="n">ImmutableSet</span><span class="o">.</span><span class="na">copyOf</span><span class="o">(</span><span class="n">set</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>从构造的方式来说，ImmutableSet集合还提供了Builder模式来构造一个集合：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Builder</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">builder</span> <span class="o">=</span> <span class="n">ImmutableSet</span><span class="o">.</span><span class="na">builder</span><span class="o">();</span>
</span><span class='line'><span class="n">ImmutableSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">immutableSet</span> <span class="o">=</span> <span class="n">builder</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="s">&quot;RED&quot;</span><span class="o">).</span><span class="na">addAll</span><span class="o">(</span><span class="n">set</span><span class="o">).</span><span class="na">build</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>在这个例子里面Builder不但能加入单个元素还能加入既有的集合。</p>

<p>除此之外，Guava Collections还提供了各种Immutable集合的实现：ImmutableList, ImmutableMap, ImmutableSortedSet, ImmutableSortedMap。</p>

<h2>Multiset:把重复的元素放入集合</h2>

<p>你可能会说这和Set接口的契约冲突，因为Set接口的javaDoc里面规定不能放入重复元素。事实上，Multiset并没有实现java.util.Set接口，它更像是一个Bag。普通的Set就像这样：[car,ship,bike],而Multiset会是这样：[carx2,shipx6,bikex3]。</p>

<p>譬如一个List里面有各种字符，然后你要统计每个字符串在List里面出现的次数：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Map</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Integer</span><span class="o">&gt;();</span>
</span><span class='line'><span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="nl">word:</span><span class="n">wordList</span><span class="o">){</span>
</span><span class='line'>  <span class="n">Integer</span> <span class="n">count</span> <span class="o">=</span> <span class="n">map</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">word</span><span class="o">);</span>
</span><span class='line'>  <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">word</span><span class="o">,</span> <span class="o">(</span><span class="n">count</span><span class="o">==</span><span class="kc">null</span><span class="o">)?</span><span class="mi">1</span><span class="o">:</span><span class="n">count</span><span class="o">+</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="c1">//count word &quot;the&quot;</span>
</span><span class='line'><span class="n">Integer</span> <span class="n">count</span> <span class="o">=</span> <span class="n">map</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="s">&quot;the&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果用Multiset就可以这样：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">HashMultiset</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">multiSet</span> <span class="o">=</span> <span class="n">HashMultiset</span><span class="o">.</span><span class="na">create</span><span class="o">();</span>
</span><span class='line'><span class="n">multiSet</span><span class="o">.</span><span class="na">addAll</span><span class="o">(</span><span class="n">wordList</span><span class="o">);</span>
</span><span class='line'><span class="c1">//count word &quot;the&quot;</span>
</span><span class='line'><span class="n">Integer</span> <span class="n">count</span> <span class="o">=</span> <span class="n">multiSet</span><span class="o">.</span><span class="na">count</span><span class="o">(</span><span class="s">&quot;the&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样连循环都不用了，而且Multiset用的方法叫count，显然比在Map里面调用get有更好的可读性。Multiset还提供了setCount这样设定元素重复次数的方法，虽然你可以通过使用Map来实现类似的功能，但是程序的可读性比Multiset差了很多。</p>

<p>常用实现Multiset接口的类有：
* HashMultiset:元素存放于HashMap
* LinkedHashMultiset:元素存放于LinkedHashMap,即元素的排列顺序由第一次放入的顺序决定
* TreeMultiset:元素被排序存放于TreeMap
* EnumMultiset:元素必须是enum类型
* ImmutableMultiset:不可修改的Mutiset</p>

<p>看到这里你可能已经发现Guava Collections都是以create或是of这样的静态方法来构造对象。这是因为这些集合类大多有多个参数的私有构造方法，由于参数数目很多，客户代码程序员使用起来就很不方便。而且以这种方式可以返回原类型的子类型对象。另外，对于创建范型对象来讲，这种方式更加简洁。</p>

<h2>Muitimap:在Map的value里面放多个元素</h2>

<p>Muitimap就是一个key对应多个value的数据结构。看上去它很像java.util.Map的结构，但是Muitimap不是Map，没有实现Map的接口。设想你对Map调了2次参数key一样的put方法，结果就是第2次的value覆盖了第一次的value。但是对Muitimap来说这个key同时对应了2个value。所以Map看上去是：{k1=v1,k2=v2,…}，而Muitimap是：{k1=[v1,v2,v3],k2=[v7,v8],…}。</p>

<p>举个记名投票的例子。所有选票都放在一个List<Ticket>里面，List的每个元素包括投票人和选举人的名字。我们可以这样写:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//Key is cadidate name, its value is his voters</span>
</span><span class='line'><span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;</span> <span class="n">hMap</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;&gt;();</span>
</span><span class='line'><span class="k">for</span><span class="o">(</span><span class="n">Ticket</span> <span class="nl">ticket:</span><span class="n">tickets</span><span class="o">){</span>
</span><span class='line'>  <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">set</span> <span class="o">=</span> <span class="n">hMap</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">ticket</span><span class="o">.</span><span class="na">getCandidate</span><span class="o">());</span>
</span><span class='line'>  <span class="k">if</span><span class="o">(</span><span class="n">set</span><span class="o">==</span><span class="kc">null</span><span class="o">){</span>
</span><span class='line'>      <span class="n">set</span> <span class="o">=</span> <span class="k">new</span> <span class="n">HashSet</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;();</span>
</span><span class='line'>      <span class="n">hMap</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">ticket</span><span class="o">.</span><span class="na">getCandidate</span><span class="o">(),</span> <span class="n">set</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="n">set</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="n">ticket</span><span class="o">.</span><span class="na">getVoter</span><span class="o">);</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>我们再来看看Muitimap能做些什么：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">HashMultimap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;</span> <span class="n">map</span> <span class="o">=</span> <span class="n">HashMultimap</span><span class="o">.</span><span class="na">create</span><span class="o">();</span>
</span><span class='line'><span class="k">for</span><span class="o">(</span><span class="n">Ticket</span> <span class="nl">ticket:</span><span class="n">tickets</span><span class="o">){</span>
</span><span class='line'>  <span class="n">map</span><span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">ticket</span><span class="o">.</span><span class="na">getCandidate</span><span class="o">(),</span> <span class="n">ticket</span><span class="o">.</span><span class="na">getVoter</span><span class="o">());</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>就这么简单！</p>

<p>Muitimap接口的主要实现类有：
* HashMultimap:key放在HashMap, 而value放在HashSet, 即一个key对应的value不可重复
* ArrayListMultimap：key放在HashMap,而value放在ArrayList,即一个key对应的value有顺序可重复
* LinkedHashMultimap:key放在LinkedHashMap,而value放在LinkedHashSet,即一个key对应的value有顺序不可重复
* TreeMultimap：key放在TreeMap，而value放在TreeSet，即一个key对应的value有排列顺序
* ImmutableMultimap:不可修改的Multimap</p>

<h2>BiMap:双向Map</h2>

<p>BiMap实现了java.util.Map接口。它的特点是它的value和它key一样也是不可重复的，换句话说它的key和value是等价的。如果你往BiMap的value里面放了重复的元素，就会得到IllegalArgumentException.</p>

<p>举个例子，你可能经常会碰到在Map里面根据value值来反推它的key值的逻辑：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">for</span><span class="o">(</span><span class="n">Map</span><span class="o">.</span><span class="na">Entry</span><span class="o">&lt;</span><span class="n">User</span><span class="o">,</span> <span class="n">Address</span><span class="o">&gt;</span> <span class="nl">entry:</span><span class="n">map</span><span class="o">.</span><span class="na">entreSet</span><span class="o">()){</span>
</span><span class='line'>  <span class="k">if</span><span class="o">(</span><span class="n">entry</span><span class="o">.</span><span class="na">getValue</span><span class="o">().</span><span class="na">equals</span><span class="o">(</span><span class="n">anAddress</span><span class="o">)){</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">entry</span><span class="o">.</span><span class="na">getKey</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果把User和Address都放在BiMap,那么一句代码就得到结果了：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">return</span> <span class="n">biMap</span><span class="o">.</span><span class="na">inverse</span><span class="o">().</span><span class="na">get</span><span class="o">(</span><span class="n">anAddress</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>这里的inverse方法就是把BiMap的key集合value集合对调，因此biMap==biMap.inverse().inverse()。</p>

<p>BiMap的常用实现有：
* HashBiMap:key集合与value集合都有HashMap实现
* EnumBiMap:key与value都必须是enum类型
* ImmutableBiMap:不可修改的BiMap</p>

<h2>MapMaker:超级强大的Map构造工具</h2>

<p>MapMaker是用来构造ConcurrentMap的工具类。为什么可以把MapMaker叫做超级强大？看了下面的例子你就知道了。首先，它可以用来构造ConcurrentHashMap:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//ConcurrentHashMap with concurrency level 8</span>
</span><span class='line'><span class="n">ConcurrentMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">map1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MapMaker</span><span class="o">().</span><span class="na">concurrencyLevel</span><span class="o">(</span><span class="mi">8</span><span class="o">).</span><span class="na">makeMap</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者构造用各种不同reference作为key和value的Map：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//ConcurrentMap with soft reference key and weak reference value</span>
</span><span class='line'><span class="n">ConcurrentMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">map2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MapMaker</span><span class="o">().</span><span class="na">softKeys</span><span class="o">().</span><span class="na">weakValues</span><span class="o">().</span><span class="na">makeMap</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者构造有自动移除时间过期项的Map:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//Automatically removed entries from map after 30 seconds since they are created</span>
</span><span class='line'><span class="n">ConcurrentMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">map3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MapMaker</span><span class="o">().</span><span class="na">expireAfterWrite</span><span class="o">(</span><span class="mi">30</span><span class="o">,</span> <span class="n">TimeUnit</span><span class="o">.</span><span class="na">SECONDS</span><span class="o">).</span><span class="na">makeMap</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者构造有最大限制数目的Map：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//Map size grows close to the 100, the map vill evict</span>
</span><span class='line'><span class="c1">//entries that are less likely to be used again</span>
</span><span class='line'><span class="n">ConcurrentMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">map4</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MapMaker</span><span class="o">().</span><span class="na">maximumSize</span><span class="o">(</span><span class="mi">100</span><span class="o">).</span><span class="na">makeMap</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>或者提供当Map里面不包含所get的项，而需要自动加入到Map的功能。这个功能当Map作为缓存的时候很有用：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//Create an Object to the map, when get() is missing in map</span>
</span><span class='line'><span class="n">ConcurrentMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">map5</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MapMaker</span><span class="o">().</span><span class="na">makeComputingMap</span><span class="o">(</span><span class="k">new</span> <span class="n">Function</span><span class="o">&lt;&gt;(</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">){</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">Object</span> <span class="nf">apply</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">){</span>
</span><span class='line'>      <span class="k">return</span> <span class="nf">createObject</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>这些还不是最强大的特性，最厉害的是MapMaker可以提供拥有以上所有特性的Map:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//Put all features together!</span>
</span><span class='line'><span class="n">ConcurrentMap</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;</span> <span class="n">mapAll</span> <span class="o">=</span> <span class="k">new</span> <span class="n">MapMaker</span><span class="o">()</span>
</span><span class='line'><span class="o">.</span><span class="na">concurrencyLevel</span><span class="o">(</span><span class="mi">8</span><span class="o">)</span>
</span><span class='line'><span class="o">.</span><span class="na">softKeys</span><span class="o">()</span>
</span><span class='line'><span class="o">.</span><span class="na">weakValues</span><span class="o">()</span>
</span><span class='line'><span class="o">.</span><span class="na">expireAfterWrite</span><span class="o">(</span><span class="mi">30</span><span class="o">,</span> <span class="n">TimeUnit</span><span class="o">.</span><span class="na">SECONDS</span><span class="o">)</span>
</span><span class='line'><span class="o">.</span><span class="na">makeComputingMap</span><span class="o">(</span>
</span><span class='line'>  <span class="k">new</span> <span class="n">Function</span><span class="o">&lt;</span><span class="n">String</span><span class="o">,</span> <span class="n">Object</span><span class="o">&gt;(){</span>
</span><span class='line'>      <span class="kd">public</span> <span class="n">Object</span> <span class="nf">apply</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span><span class="o">){</span>
</span><span class='line'>          <span class="k">return</span> <span class="nf">createObject</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>Ordering class:灵活的多字段排序比较器</h2>

<p>需对集合排序或者求最大值最小值，首推java.util.Collections类，但关键是要提供Comparator接口的实现。假设有个待排序的List<Foo>, 而Foo里面有两个排序关键字int a, int b和int c:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">list</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">Foo</span><span class="o">&gt;(){</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">int</span> <span class="nf">compare</span><span class="o">(</span><span class="n">Foo</span> <span class="n">f1</span><span class="o">,</span> <span class="n">Foo</span> <span class="n">f2</span><span class="o">){</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">resultA</span> <span class="o">=</span> <span class="n">f1</span><span class="o">.</span><span class="na">a</span><span class="o">-</span><span class="n">f2</span><span class="o">.</span><span class="na">a</span><span class="o">;</span>
</span><span class='line'>      <span class="kt">int</span> <span class="n">resultB</span> <span class="o">=</span> <span class="n">f1</span><span class="o">.</span><span class="na">b</span><span class="o">-</span><span class="n">f2</span><span class="o">.</span><span class="na">b</span><span class="o">;</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">resultA</span><span class="o">==</span><span class="mi">0</span><span class="o">?(</span><span class="n">resultB</span><span class="o">==</span><span class="mi">0</span><span class="o">?</span><span class="n">fl</span><span class="o">.</span><span class="na">c</span><span class="o">-</span><span class="n">f2</span><span class="o">.</span><span class="na">c</span><span class="o">:</span><span class="n">resultB</span><span class="o">):</span><span class="n">resultA</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">})</span>
</span></code></pre></td></tr></table></div></figure>


<p>这看上去有点眼晕，如果用一串if-else也好不到哪里去。看看ComparisonChain能做到什么：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">*(</span><span class="n">list</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">Foo</span><span class="o">&gt;(){</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">ComparisonChain</span><span class="o">.</span><span class="na">start</span><span class="o">()</span>
</span><span class='line'>      <span class="o">.</span><span class="na">compare</span><span class="o">(</span><span class="n">f1</span><span class="o">.</span><span class="na">a</span><span class="o">,</span> <span class="n">f2</span><span class="o">.</span><span class="na">a</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">compare</span><span class="o">(</span><span class="n">f1</span><span class="o">.</span><span class="na">b</span><span class="o">,</span> <span class="n">f2</span><span class="o">.</span><span class="na">b</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">compare</span><span class="o">(</span><span class="n">f1</span><span class="o">.</span><span class="na">c</span><span class="o">,</span> <span class="n">f2</span><span class="o">.</span><span class="na">c</span><span class="o">).</span><span class="na">result</span><span class="o">();</span>
</span><span class='line'><span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>如果排序关键字要用自定义比较器，compare方法也有接受Comparator的重载版本。譬如Foo里面每个排序关键字都已经有了各自的Comparator,那么利用ComparisonChain可以：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">list</span><span class="o">,</span> <span class="k">new</span> <span class="n">Comparator</span><span class="o">&lt;</span><span class="n">Foo</span><span class="o">&gt;(){</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">ComparisonChain</span><span class="o">.</span><span class="na">start</span><span class="o">()</span>
</span><span class='line'>      <span class="o">.</span><span class="na">compare</span><span class="o">(</span><span class="n">f1</span><span class="o">.</span><span class="na">a</span><span class="o">,</span> <span class="n">f2</span><span class="o">.</span><span class="na">a</span><span class="o">,</span> <span class="n">comparatorA</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">compare</span><span class="o">(</span><span class="n">f1</span><span class="o">.</span><span class="na">b</span><span class="o">,</span> <span class="n">f2</span><span class="o">.</span><span class="na">b</span><span class="o">,</span> <span class="n">comparatorB</span><span class="o">)</span>
</span><span class='line'>      <span class="o">.</span><span class="na">compare</span><span class="o">(</span><span class="n">f1</span><span class="o">.</span><span class="na">c</span><span class="o">,</span> <span class="n">f2</span><span class="o">.</span><span class="na">c</span><span class="o">,</span> <span class="n">comparatorC</span><span class="o">).</span><span class="na">result</span><span class="o">();</span>
</span><span class='line'><span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Ordring类还提供了一个组合Comparator对象的方法。而且Ordring本身实现了Comparator接口所以它能直接作为Comparator使用：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Ordering</span><span class="o">&lt;</span><span class="n">Foo</span><span class="o">&gt;</span> <span class="n">ordering</span> <span class="o">=</span> <span class="n">Ordering</span><span class="o">.</span><span class="na">compound</span><span class="o">(</span>
</span><span class='line'>  <span class="n">Arrays</span><span class="o">.</span><span class="na">asList</span><span class="o">(</span><span class="n">ComparatorA</span><span class="o">,</span> <span class="n">comparatorB</span><span class="o">,</span> <span class="n">comparatorC</span><span class="o">));</span>
</span><span class='line'><span class="n">Collections</span><span class="o">.</span><span class="na">sort</span><span class="o">(</span><span class="n">list</span><span class="o">,</span> <span class="n">ordering</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<h2>其他特性</h2>

<h3>过滤器：利用Collection2.filter()方法过滤集合中不符合条件的元素。譬如过滤一个List<Integer>里面小于10的元素：</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Collection</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">filterCollection</span> <span class="o">=</span> <span class="n">Collections2</span><span class="o">.</span><span class="na">filter</span><span class="o">(</span><span class="n">list</span><span class="o">,</span> <span class="k">new</span> <span class="n">Predicate</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;(){</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">apply</span><span class="o">(</span><span class="n">Integer</span> <span class="n">input</span><span class="o">){</span>
</span><span class='line'>      <span class="k">return</span> <span class="n">input</span> <span class="o">&gt;=</span> <span class="mi">10</span><span class="o">;</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>当然，你可以自己写一个循环来实现这个功能，但是这样不能保证之后小于10的元素不被放入集合。filter的强大之处在于返回的filterCollection仍然有排斥小于10的元素的特性，如果调filterCollection.add(9)就会得到一个IllegalArgumentException.</p>

<h3>转换器：利用Collections.transform方法来转换集合中的元素。譬如把一个Set<Integer>里面所有元素都转化成带格式的String来产生新的Collection<String>:</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Collection</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">formatCollection</span> <span class="o">=</span> <span class="n">Collection2</span><span class="o">.</span><span class="na">transform</span><span class="o">(</span><span class="n">set</span><span class="o">,</span> <span class="k">new</span> <span class="n">Function</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">,</span> <span class="n">String</span><span class="o">&gt;(){</span>
</span><span class='line'>  <span class="nd">@Override</span>
</span><span class='line'>  <span class="kd">public</span> <span class="n">String</span> <span class="nf">apply</span><span class="o">(</span><span class="n">Integer</span> <span class="n">input</span><span class="o">){</span>
</span><span class='line'>      <span class="k">return</span> <span class="k">new</span> <span class="nf">DecimalFormat</span><span class="o">(</span><span class="s">&quot;#,###&quot;</span><span class="o">).</span><span class="na">format</span><span class="o">(</span><span class="n">input</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">})</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Guava的使用指南之Basic Utilities]]></title>
    <link href="http://ajia.github.com/blog/2013/05/31/guavade-shi-yong-zhi-nan-zhi-basic-utilities/"/>
    <updated>2013-05-31T13:44:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/05/31/guavade-shi-yong-zhi-nan-zhi-basic-utilities</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Gson的使用指南]]></title>
    <link href="http://ajia.github.com/blog/2013/05/31/gsonde-shi-yong-zhi-nan/"/>
    <updated>2013-05-31T13:42:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/05/31/gsonde-shi-yong-zhi-nan</id>
    <content type="html"><![CDATA[<h1>介绍</h1>

<p>Gson是一个可以把Java对象转化成JSON格式的字符串，也可以从一个JSON字符串转换为一个Java对象。Gson是一个开源项目，<a href="http://code.google.com/p/google-gson">这里是地址</a></p>

<!-- more -->


<h1>开始使用</h1>

<p>可以使用</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="k">new</span> <span class="nf">Gson</span><span class="o">()</span>
</span></code></pre></td></tr></table></div></figure>


<p>来创建主要的类Gson的实例。也可以使用GsonBuilder来定制你需要的Gson实例，比如版本控制等等。</p>

<h3>基本的例子</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="o">(</span><span class="n">Serialization</span><span class="o">)</span>
</span><span class='line'><span class="n">Gson</span> <span class="n">gson</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Gson</span><span class="o">();</span>
</span><span class='line'><span class="n">gson</span><span class="o">.</span><span class="na">toJson</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>            <span class="o">==&gt;</span> <span class="n">prints</span> <span class="mi">1</span>
</span><span class='line'><span class="n">gson</span><span class="o">.</span><span class="na">toJson</span><span class="o">(</span><span class="s">&quot;abcd&quot;</span><span class="o">);</span>       <span class="o">==&gt;</span> <span class="n">prints</span> <span class="s">&quot;abcd&quot;</span>
</span><span class='line'><span class="n">gson</span><span class="o">.</span><span class="na">toJson</span><span class="o">(</span><span class="k">new</span> <span class="n">Long</span><span class="o">(</span><span class="mi">10</span><span class="o">));</span> <span class="o">==&gt;</span> <span class="n">prints</span> <span class="mi">10</span>
</span><span class='line'><span class="kt">int</span><span class="o">[]</span> <span class="n">values</span> <span class="o">=</span> <span class="o">{</span> <span class="mi">1</span> <span class="o">};</span>
</span><span class='line'><span class="n">gson</span><span class="o">.</span><span class="na">toJson</span><span class="o">(</span><span class="n">values</span><span class="o">);</span>       <span class="o">==&gt;</span> <span class="n">prints</span> <span class="o">[</span><span class="mi">1</span><span class="o">]</span>
</span><span class='line'><span class="o">(</span><span class="n">Deserialization</span><span class="o">)</span>
</span><span class='line'><span class="kt">int</span> <span class="n">one</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="s">&quot;1&quot;</span><span class="o">,</span> <span class="kt">int</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="n">Integer</span> <span class="n">one</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="s">&quot;1&quot;</span><span class="o">,</span> <span class="n">Integer</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="n">Long</span> <span class="n">one</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="s">&quot;1&quot;</span><span class="o">,</span> <span class="n">Long</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="n">Boolean</span> <span class="kc">false</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="s">&quot;false&quot;</span><span class="o">,</span> <span class="n">Boolean</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">str</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="s">&quot;\&quot;abc\&quot;&quot;</span><span class="o">,</span> <span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">anotherStr</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="s">&quot;[\&quot;abc\&quot;]&quot;</span><span class="o">,</span> <span class="n">String</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>关于对象的例子</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">BagOfPrimitives</span> <span class="o">{</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kt">int</span> <span class="n">value1</span> <span class="o">=</span> <span class="mi">1</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="n">String</span> <span class="n">value2</span> <span class="o">=</span> <span class="s">&quot;abc&quot;</span><span class="o">;</span>
</span><span class='line'>  <span class="kd">private</span> <span class="kd">transient</span> <span class="kt">int</span> <span class="n">value3</span> <span class="o">=</span> <span class="mi">3</span><span class="o">;</span>
</span><span class='line'>  <span class="n">BagOfPrimitives</span><span class="o">()</span> <span class="o">{</span>
</span><span class='line'>    <span class="c1">// no-args constructor</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="o">(</span><span class="n">Serialization</span><span class="o">)</span>
</span><span class='line'><span class="n">BagOfPrimitives</span> <span class="n">obj</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BagOfPrimitives</span><span class="o">();</span>
</span><span class='line'><span class="n">Gson</span> <span class="n">gson</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Gson</span><span class="o">();</span>
</span><span class='line'><span class="n">String</span> <span class="n">json</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">toJson</span><span class="o">(</span><span class="n">obj</span><span class="o">);</span>
</span><span class='line'><span class="o">==&gt;</span> <span class="n">json</span> <span class="n">is</span> <span class="o">{</span><span class="s">&quot;value1&quot;</span><span class="o">:</span><span class="mi">1</span><span class="o">,</span><span class="s">&quot;value2&quot;</span><span class="o">:</span><span class="s">&quot;abc&quot;</span><span class="o">}</span>
</span><span class='line'><span class="n">Note</span> <span class="n">that</span> <span class="n">you</span> <span class="n">can</span> <span class="n">not</span> <span class="n">serialize</span> <span class="n">objects</span> <span class="n">with</span> <span class="n">circular</span> <span class="n">references</span> <span class="n">since</span> <span class="n">that</span> <span class="n">will</span> <span class="n">result</span> <span class="n">in</span> <span class="n">infinite</span> <span class="n">recursion</span><span class="o">.</span>
</span><span class='line'><span class="o">(</span><span class="n">Deserialization</span><span class="o">)</span>
</span><span class='line'><span class="n">BagOfPrimitives</span> <span class="n">obj2</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="n">json</span><span class="o">,</span> <span class="n">BagOfPrimitives</span><span class="o">.</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">==&gt;</span> <span class="n">obj2</span> <span class="n">is</span> <span class="n">just</span> <span class="n">like</span> <span class="n">obj</span>
</span></code></pre></td></tr></table></div></figure>


<p>
以下是转换对象的时候几点事项：
* 建议使用private的成员变量
* 没有必要对所有的成员变量使用任何的注解来表示这个变量需要被序列化或反序列化
* 如果一个成员变量被关键字transient修饰，（默认）那么它将在序列化和反序列化的时候被忽略
* 这样处理nulls是正确的
<strong> 序列化的时候，一个null变量在输出的时候将被跳过
</strong> 反序列化的时候，JSON中一个丢失的实体会被设置为null
* 如果一个成员变量被synthetic修饰，在序列化和反序列化的时候会被忽略
* 内部类、匿名类、局部类会被忽略掉。</p>

<h3>数组的例子</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Gson</span> <span class="n">gson</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Gson</span><span class="o">();</span>
</span><span class='line'><span class="kt">int</span><span class="o">[]</span> <span class="n">ints</span> <span class="o">=</span> <span class="o">{</span><span class="mi">1</span><span class="o">,</span> <span class="mi">2</span><span class="o">,</span> <span class="mi">3</span><span class="o">,</span> <span class="mi">4</span><span class="o">,</span> <span class="mi">5</span><span class="o">};</span>
</span><span class='line'><span class="n">String</span><span class="o">[]</span> <span class="n">strings</span> <span class="o">=</span> <span class="o">{</span><span class="s">&quot;abc&quot;</span><span class="o">,</span> <span class="s">&quot;def&quot;</span><span class="o">,</span> <span class="s">&quot;ghi&quot;</span><span class="o">};</span>
</span><span class='line'><span class="o">(</span><span class="n">Serialization</span><span class="o">)</span>
</span><span class='line'><span class="n">gson</span><span class="o">.</span><span class="na">toJson</span><span class="o">(</span><span class="n">ints</span><span class="o">);</span>     <span class="o">==&gt;</span> <span class="n">prints</span> <span class="o">[</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">]</span>
</span><span class='line'><span class="n">gson</span><span class="o">.</span><span class="na">toJson</span><span class="o">(</span><span class="n">strings</span><span class="o">);</span>  <span class="o">==&gt;</span> <span class="n">prints</span> <span class="o">[</span><span class="s">&quot;abc&quot;</span><span class="o">,</span> <span class="s">&quot;def&quot;</span><span class="o">,</span> <span class="s">&quot;ghi&quot;</span><span class="o">]</span>
</span><span class='line'><span class="o">(</span><span class="n">Deserialization</span><span class="o">)</span>
</span><span class='line'><span class="kt">int</span><span class="o">[]</span> <span class="n">ints2</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="s">&quot;[1,2,3,4,5]&quot;</span><span class="o">,</span> <span class="kt">int</span><span class="o">[].</span><span class="na">class</span><span class="o">);</span>
</span><span class='line'><span class="o">==&gt;</span> <span class="n">ints2</span> <span class="n">will</span> <span class="n">be</span> <span class="n">same</span> <span class="n">as</span> <span class="n">ints</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<h3>集合的例子</h3>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">Gson</span> <span class="n">gson</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Gson</span><span class="o">();</span>
</span><span class='line'><span class="n">Collection</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">ints</span> <span class="o">=</span> <span class="n">Lists</span><span class="o">.</span><span class="na">immutableList</span><span class="o">(</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">);</span>
</span><span class='line'><span class="o">(</span><span class="n">Serialization</span><span class="o">)</span>
</span><span class='line'><span class="n">String</span> <span class="n">json</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">toJson</span><span class="o">(</span><span class="n">ints</span><span class="o">);</span> <span class="o">==&gt;</span> <span class="n">json</span> <span class="n">is</span> <span class="o">[</span><span class="mi">1</span><span class="o">,</span><span class="mi">2</span><span class="o">,</span><span class="mi">3</span><span class="o">,</span><span class="mi">4</span><span class="o">,</span><span class="mi">5</span><span class="o">]</span>
</span><span class='line'><span class="o">(</span><span class="n">Deserialization</span><span class="o">)</span>
</span><span class='line'><span class="n">Type</span> <span class="n">collectionType</span> <span class="o">=</span> <span class="k">new</span> <span class="n">TypeToken</span><span class="o">&lt;</span><span class="n">Collection</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;&gt;(){}.</span><span class="na">getType</span><span class="o">();</span>
</span><span class='line'><span class="n">Collection</span><span class="o">&lt;</span><span class="n">Integer</span><span class="o">&gt;</span> <span class="n">ints2</span> <span class="o">=</span> <span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="n">json</span><span class="o">,</span> <span class="n">collectionType</span><span class="o">);</span>
</span><span class='line'><span class="n">ints2</span> <span class="n">is</span> <span class="n">same</span> <span class="n">as</span> <span class="n">ints</span>
</span></code></pre></td></tr></table></div></figure>


<h4>序列化和反序列化通用的类型</h4>

<p>当你在调用toJson(obj)的时候，Gson会调用obj.getClass()来获得即将被序列化的对象的成员变量。然后调用fromJson(json, MyClass.class)方法来得到MyClass的对象。如果这个类没有使用范性的情况下是正常的。但是，如果是使用范型的，由于java的类型擦除机制，就不能正常工作了。如：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="kd">class</span> <span class="nc">Foo</span><span class="o">&lt;</span><span class="n">T</span><span class="o">&gt;</span> <span class="o">{</span>
</span><span class='line'>  <span class="n">T</span> <span class="n">value</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'><span class="n">Gson</span> <span class="n">gson</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Gson</span><span class="o">();</span>
</span><span class='line'><span class="n">Foo</span><span class="o">&lt;</span><span class="n">Bar</span><span class="o">&gt;</span> <span class="n">foo</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Foo</span><span class="o">&lt;</span><span class="n">Bar</span><span class="o">&gt;();</span>
</span><span class='line'><span class="n">gson</span><span class="o">.</span><span class="na">toJson</span><span class="o">(</span><span class="n">foo</span><span class="o">);</span> <span class="c1">// May not serialize foo.value correctly</span>
</span><span class='line'><span class="n">gson</span><span class="o">.</span><span class="na">fromJson</span><span class="o">(</span><span class="n">json</span><span class="o">,</span> <span class="n">foo</span><span class="o">.</span><span class="na">getClass</span><span class="o">());</span> <span class="c1">// Fails to deserialize foo.value as Bar</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[java插件之timer]]></title>
    <link href="http://ajia.github.com/blog/2013/05/24/javacha-jian-zhi-timer/"/>
    <updated>2013-05-24T14:20:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/05/24/javacha-jian-zhi-timer</id>
    <content type="html"><![CDATA[<p>JQuery Timers应用知识<br/>
提供了三个函式<br/>
1. everyTime(时间间隔, [计时器名称], 函式名称, [次数限制], [等待函式程序完成])</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/*************************************************************</span>
</span><span class='line'><span class="cm">*   everyTime(时间间隔, [计时器名称], 函式名称, [次数限制], [等待函式程序完成])</span>
</span><span class='line'><span class="cm">*************************************************************/</span>
</span><span class='line'><span class="c1">//每1秒执行函式test()</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">test</span><span class="p">(){</span>
</span><span class='line'>   <span class="c1">//do something...</span>
</span><span class='line'><span class="p">}</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">everyTime</span><span class="p">(</span><span class="s1">&#39;1s&#39;</span><span class="p">,</span><span class="nx">test</span><span class="p">);</span>
</span><span class='line'><span class="c1">//每1秒执行</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">everyTime</span><span class="p">(</span><span class="s1">&#39;1s&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'><span class="c1">//do something...</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="c1">//每1秒执行，并命名计时器名称为A</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">everyTime</span><span class="p">(</span><span class="s1">&#39;1s&#39;</span><span class="p">,</span><span class="s1">&#39;A&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'><span class="c1">//do something...</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="c1">//每20秒执行，最多5次，并命名计时器名称为B</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">everyTime</span><span class="p">(</span><span class="s1">&#39;2das&#39;</span><span class="p">,</span><span class="s1">&#39;B&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'><span class="c1">//do something...</span>
</span><span class='line'><span class="p">},</span><span class="mi">5</span><span class="p">);</span>
</span><span class='line'><span class="c1">//每20秒执行，无限次，并命名计时器名称为C</span>
</span><span class='line'><span class="c1">//若时间间隔抵到，但函式程序仍未完成则需等待执行函式完成后再继续计时</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">everyTime</span><span class="p">(</span><span class="s1">&#39;2das&#39;</span><span class="p">,</span><span class="s1">&#39;C&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'>    <span class="c1">//执行一个会超过20秒以上的程式</span>
</span><span class='line'><span class="p">},</span><span class="mi">0</span><span class="p">,</span><span class="kc">true</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<!-- more -->


<ol>
<li>oneTime(时间间隔, [计时器名称], 呼叫的函式)</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/***********************************************************</span>
</span><span class='line'><span class="cm">*   oneTime(时间间隔, [计时器名称], 呼叫的函式)</span>
</span><span class='line'><span class="cm">***********************************************************/</span>
</span><span class='line'><span class="c1">//倒数10秒后执行</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">oneTime</span><span class="p">(</span><span class="s1">&#39;1das&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'><span class="c1">//do something...</span>
</span><span class='line'><span class="p">});</span>
</span><span class='line'><span class="c1">//倒数100秒后执行，并命名计时器名称为D</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">oneTime</span><span class="p">(</span><span class="s1">&#39;1hs&#39;</span><span class="p">,</span><span class="s1">&#39;D&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(){</span>
</span><span class='line'><span class="c1">//do something...</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>stopTime ([计时器名称], [函式名称])</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="cm">/************************************************************</span>
</span><span class='line'><span class="cm">*  stopTime ([计时器名称], [函式名称])</span>
</span><span class='line'><span class="cm">************************************************************/</span>
</span><span class='line'><span class="c1">//停止所有的在$(&#39;body&#39;)上计时器</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">stopTime</span> <span class="p">();</span>
</span><span class='line'><span class="c1">//停止$(&#39;body&#39;)上名称为A的计时器</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">stopTime</span> <span class="p">(</span><span class="s1">&#39;A&#39;</span><span class="p">);</span>
</span><span class='line'><span class="c1">//停止$(&#39;body&#39;)上所有呼叫test()的计时器</span>
</span><span class='line'><span class="nx">$</span><span class="p">(</span><span class="s1">&#39;body&#39;</span><span class="p">).</span><span class="nx">stopTime</span> <span class="p">(</span><span class="nx">test</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>自定义时间单位
打开源代码
找到</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">powers</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>   <span class="c1">// Yeah this is major overkill...</span>
</span><span class='line'>   <span class="s1">&#39;ms&#39;</span><span class="o">:</span> <span class="mi">1</span><span class="p">,</span>
</span><span class='line'>   <span class="s1">&#39;cs&#39;</span><span class="o">:</span> <span class="mi">10</span><span class="p">,</span>
</span><span class='line'>   <span class="s1">&#39;ds&#39;</span><span class="o">:</span> <span class="mi">100</span><span class="p">,</span>
</span><span class='line'>   <span class="s1">&#39;s&#39;</span><span class="o">:</span> <span class="mi">1000</span><span class="p">,</span>
</span><span class='line'>   <span class="s1">&#39;das&#39;</span><span class="o">:</span> <span class="mi">10000</span><span class="p">,</span>
</span><span class='line'>   <span class="s1">&#39;hs&#39;</span><span class="o">:</span> <span class="mi">100000</span><span class="p">,</span>
</span><span class='line'>   <span class="s1">&#39;ks&#39;</span><span class="o">:</span> <span class="mi">1000000</span>
</span><span class='line'>  <span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[joda日期计算]]></title>
    <link href="http://ajia.github.com/blog/2013/05/24/jodari-qi-ji-suan/"/>
    <updated>2013-05-24T10:19:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/05/24/jodari-qi-ji-suan</id>
    <content type="html"><![CDATA[<p>Joda-Time提供了一组Java类包用于处理包括ISO8601标准在内的date和time。可以利用它把JDK Date和Calendar类完全替换掉，而且仍然能够提供很好的集成。<a href="http://joda-time.sourceforge.net/">项目地址</a></p>

<!-- more -->


<p>获取DateTime:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//方法一：取系统点间  </span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">dt1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">();</span>
</span><span class='line'><span class="c1">//方法二：通过java.util.Date对象生成  </span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">dt2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">(</span><span class="k">new</span> <span class="n">Date</span><span class="o">());</span>
</span><span class='line'><span class="c1">//方法三：指定年月日点分秒生成(参数依次是：年,月,日,时,分,秒,毫秒)  </span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">dt3</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">(</span><span class="mi">2012</span><span class="o">,</span> <span class="mi">5</span><span class="o">,</span> <span class="mi">20</span><span class="o">,</span> <span class="mi">13</span><span class="o">,</span> <span class="mi">14</span><span class="o">,</span> <span class="mi">0</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'><span class="c1">//方法四：ISO8601形式生成  </span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">dt4</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">(</span><span class="s">&quot;2012-05-20&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">dt5</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">(</span><span class="s">&quot;2012-05-20T13:14:00&quot;</span><span class="o">);</span>
</span><span class='line'><span class="c1">//只需要年月日的时候  </span>
</span><span class='line'><span class="n">LocalDate</span> <span class="n">localDate</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LocalDate</span><span class="o">(</span><span class="mi">2009</span><span class="o">,</span> <span class="mi">9</span><span class="o">,</span> <span class="mi">6</span><span class="o">);</span><span class="c1">// September 6, 2009  </span>
</span><span class='line'><span class="c1">//只需要时分秒毫秒的时候  </span>
</span><span class='line'><span class="n">LocalTime</span> <span class="n">localTime</span> <span class="o">=</span> <span class="k">new</span> <span class="n">LocalTime</span><span class="o">(</span><span class="mi">13</span><span class="o">,</span> <span class="mi">30</span><span class="o">,</span> <span class="mi">26</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span><span class="c1">// 1:30:26PM</span>
</span></code></pre></td></tr></table></div></figure>


<p>获取年月日点分秒</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">DateTime</span> <span class="n">dt</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">();</span>
</span><span class='line'><span class="c1">//年  </span>
</span><span class='line'><span class="kt">int</span> <span class="n">year</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">getYear</span><span class="o">();</span>
</span><span class='line'><span class="c1">//月  </span>
</span><span class='line'><span class="kt">int</span> <span class="n">month</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">getMonthOfYear</span><span class="o">();</span>
</span><span class='line'><span class="c1">//日  </span>
</span><span class='line'><span class="kt">int</span> <span class="n">day</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">getDayOfMonth</span><span class="o">();</span>
</span><span class='line'><span class="c1">//星期  </span>
</span><span class='line'><span class="kt">int</span> <span class="n">week</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">getDayOfWeek</span><span class="o">();</span>
</span><span class='line'><span class="c1">//点  </span>
</span><span class='line'><span class="kt">int</span> <span class="n">hour</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">getHourOfDay</span><span class="o">();</span>
</span><span class='line'><span class="c1">//分  </span>
</span><span class='line'><span class="kt">int</span> <span class="n">min</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">getMinuteOfHour</span><span class="o">();</span>
</span><span class='line'><span class="c1">//秒  </span>
</span><span class='line'><span class="kt">int</span> <span class="n">sec</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">getSecondOfMinute</span><span class="o">();</span>
</span><span class='line'><span class="c1">//毫秒  </span>
</span><span class='line'><span class="kt">int</span> <span class="n">msec</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">getMillisOfSecond</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>星期的特殊处理</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">DateTime</span> <span class="n">dt</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">();</span>
</span><span class='line'><span class="c1">//星期  </span>
</span><span class='line'><span class="k">switch</span><span class="o">(</span><span class="n">dt</span><span class="o">.</span><span class="na">getDayOfWeek</span><span class="o">())</span> <span class="o">{</span>
</span><span class='line'><span class="k">case</span> <span class="n">DateTimeConstants</span><span class="o">.</span><span class="na">SUNDAY</span><span class="o">:</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;星期日&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">break</span><span class="o">;</span>
</span><span class='line'><span class="k">case</span> <span class="n">DateTimeConstants</span><span class="o">.</span><span class="na">MONDAY</span><span class="o">:</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;星期一&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">break</span><span class="o">;</span>
</span><span class='line'><span class="k">case</span> <span class="n">DateTimeConstants</span><span class="o">.</span><span class="na">TUESDAY</span><span class="o">:</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;星期二&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">break</span><span class="o">;</span>
</span><span class='line'><span class="k">case</span> <span class="n">DateTimeConstants</span><span class="o">.</span><span class="na">WEDNESDAY</span><span class="o">:</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;星期三&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">break</span><span class="o">;</span>
</span><span class='line'><span class="k">case</span> <span class="n">DateTimeConstants</span><span class="o">.</span><span class="na">THURSDAY</span><span class="o">:</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;星期四&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">break</span><span class="o">;</span>
</span><span class='line'><span class="k">case</span> <span class="n">DateTimeConstants</span><span class="o">.</span><span class="na">FRIDAY</span><span class="o">:</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;星期五&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">break</span><span class="o">;</span>
</span><span class='line'><span class="k">case</span> <span class="n">DateTimeConstants</span><span class="o">.</span><span class="na">SATURDAY</span><span class="o">:</span>
</span><span class='line'>    <span class="n">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">&quot;星期六&quot;</span><span class="o">);</span>
</span><span class='line'>    <span class="k">break</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>与JDK日期对象转换</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">DateTime</span> <span class="n">dt</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">();</span>
</span><span class='line'><span class="c1">//转换成java.util.Date对象  </span>
</span><span class='line'><span class="n">Date</span> <span class="n">d1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Date</span><span class="o">(</span><span class="n">dt</span><span class="o">.</span><span class="na">getMillis</span><span class="o">());</span>
</span><span class='line'><span class="n">Date</span> <span class="n">d2</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">toDate</span><span class="o">();</span>
</span><span class='line'><span class="c1">//转换成java.util.Calendar对象  </span>
</span><span class='line'><span class="n">Calendar</span> <span class="n">c1</span> <span class="o">=</span> <span class="n">Calendar</span><span class="o">.</span><span class="na">getInstance</span><span class="o">();</span>
</span><span class='line'><span class="n">c1</span><span class="o">.</span><span class="na">setTimeInMillis</span><span class="o">(</span><span class="n">dt</span><span class="o">.</span><span class="na">getMillis</span><span class="o">());</span>
</span><span class='line'><span class="n">Calendar</span> <span class="n">c2</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">toCalendar</span><span class="o">(</span><span class="n">Locale</span><span class="o">.</span><span class="na">getDefault</span><span class="o">());</span>
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>日期前后推算</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">DateTime</span> <span class="n">dt</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">();</span>
</span><span class='line'><span class="c1">//昨天  </span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">yesterday</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">minusDays</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="c1">//明天  </span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">tomorrow</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">plusDays</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="c1">//1个月前  </span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">before1month</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">minusMonths</span><span class="o">(</span><span class="mi">1</span><span class="o">);</span>
</span><span class='line'><span class="c1">//3个月后  </span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">after3month</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">plusMonths</span><span class="o">(</span><span class="mi">3</span><span class="o">);</span>
</span><span class='line'><span class="c1">//2年前  </span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">before2year</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">minusYears</span><span class="o">(</span><span class="mi">2</span><span class="o">);</span>
</span><span class='line'><span class="c1">//5年后  </span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">after5year</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">plusYears</span><span class="o">(</span><span class="mi">5</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>取特殊日期</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">DateTime</span> <span class="n">dt</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">();</span>
</span><span class='line'><span class="c1">//月末日期    </span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">lastday</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">dayOfMonth</span><span class="o">().</span><span class="na">withMaximumValue</span><span class="o">();</span>
</span><span class='line'><span class="c1">//90天后那周的周一  </span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">firstday</span> <span class="o">=</span> <span class="n">dt</span><span class="o">.</span><span class="na">plusDays</span><span class="o">(</span><span class="mi">90</span><span class="o">).</span><span class="na">dayOfWeek</span><span class="o">().</span><span class="na">withMinimumValue</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>


<p>计算区间</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">DateTime</span> <span class="n">begin</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">(</span><span class="s">&quot;2012-02-01&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">end</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">(</span><span class="s">&quot;2012-05-01&quot;</span><span class="o">);</span>
</span><span class='line'><span class="c1">//计算区间毫秒数  </span>
</span><span class='line'><span class="n">Duration</span> <span class="n">d</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Duration</span><span class="o">(</span><span class="n">begin</span><span class="o">,</span> <span class="n">end</span><span class="o">);</span>
</span><span class='line'><span class="kt">long</span> <span class="n">time</span> <span class="o">=</span> <span class="n">d</span><span class="o">.</span><span class="na">getMillis</span><span class="o">();</span>
</span><span class='line'><span class="c1">//计算区间天数  </span>
</span><span class='line'><span class="n">Period</span> <span class="n">p</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Period</span><span class="o">(</span><span class="n">begin</span><span class="o">,</span> <span class="n">end</span><span class="o">,</span> <span class="n">PeriodType</span><span class="o">.</span><span class="na">days</span><span class="o">());</span>
</span><span class='line'><span class="kt">int</span> <span class="n">days</span> <span class="o">=</span> <span class="n">p</span><span class="o">.</span><span class="na">getDays</span><span class="o">();</span>
</span><span class='line'><span class="c1">//计算特定日期是否在该区间内  </span>
</span><span class='line'><span class="n">Interval</span> <span class="n">i</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Interval</span><span class="o">(</span><span class="n">begin</span><span class="o">,</span> <span class="n">end</span><span class="o">);</span>
</span><span class='line'><span class="kt">boolean</span> <span class="n">contained</span> <span class="o">=</span> <span class="n">i</span><span class="o">.</span><span class="na">contains</span><span class="o">(</span><span class="k">new</span> <span class="n">DateTime</span><span class="o">(</span><span class="s">&quot;2012-03-01&quot;</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>


<p>日期比较</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">DateTime</span> <span class="n">d1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">(</span><span class="s">&quot;2012-02-01&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">d2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">(</span><span class="s">&quot;2012-05-01&quot;</span><span class="o">);</span>
</span><span class='line'><span class="c1">//和系统时间比  </span>
</span><span class='line'><span class="kt">boolean</span> <span class="n">b1</span> <span class="o">=</span> <span class="n">d1</span><span class="o">.</span><span class="na">isAfterNow</span><span class="o">();</span>
</span><span class='line'><span class="kt">boolean</span> <span class="n">b2</span> <span class="o">=</span> <span class="n">d1</span><span class="o">.</span><span class="na">isBeforeNow</span><span class="o">();</span>
</span><span class='line'><span class="kt">boolean</span> <span class="n">b3</span> <span class="o">=</span> <span class="n">d1</span><span class="o">.</span><span class="na">isEqualNow</span><span class="o">();</span>
</span><span class='line'><span class="c1">//和其他日期比  </span>
</span><span class='line'><span class="kt">boolean</span> <span class="n">f1</span> <span class="o">=</span> <span class="n">d1</span><span class="o">.</span><span class="na">isAfter</span><span class="o">(</span><span class="n">d2</span><span class="o">);</span>
</span><span class='line'><span class="kt">boolean</span> <span class="n">f2</span> <span class="o">=</span> <span class="n">d1</span><span class="o">.</span><span class="na">isBefore</span><span class="o">(</span><span class="n">d2</span><span class="o">);</span>
</span><span class='line'><span class="kt">boolean</span> <span class="n">f3</span> <span class="o">=</span> <span class="n">d1</span><span class="o">.</span><span class="na">isEqual</span><span class="o">(</span><span class="n">d2</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>格式化输出</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">DateTime</span> <span class="n">dateTime</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">();</span>
</span><span class='line'><span class="n">String</span> <span class="n">s1</span> <span class="o">=</span> <span class="n">dateTime</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="s">&quot;yyyy/MM/dd hh:mm:ss.SSSa&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">s2</span> <span class="o">=</span> <span class="n">dateTime</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="s">&quot;yyyy-MM-dd HH:mm:ss&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">s3</span> <span class="o">=</span> <span class="n">dateTime</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="s">&quot;EEEE dd MMMM, yyyy HH:mm:ssa&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">s4</span> <span class="o">=</span> <span class="n">dateTime</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="s">&quot;yyyy/MM/dd HH:mm ZZZZ&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">String</span> <span class="n">s5</span> <span class="o">=</span> <span class="n">dateTime</span><span class="o">.</span><span class="na">toString</span><span class="o">(</span><span class="s">&quot;yyyy/MM/dd HH:mm Z&quot;</span><span class="o">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>时区</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="c1">//默认设置为日本时间  </span>
</span><span class='line'><span class="n">DateTimeZone</span><span class="o">.</span><span class="na">setDefault</span><span class="o">(</span><span class="n">DateTimeZone</span><span class="o">.</span><span class="na">forID</span><span class="o">(</span><span class="s">&quot;Asia/Tokyo&quot;</span><span class="o">));</span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">dt1</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">();</span>
</span><span class='line'><span class="c1">//伦敦时间  </span>
</span><span class='line'><span class="n">DateTime</span> <span class="n">dt2</span> <span class="o">=</span> <span class="k">new</span> <span class="n">DateTime</span><span class="o">(</span><span class="n">DateTimeZone</span><span class="o">.</span><span class="na">forID</span><span class="o">(</span><span class="s">&quot;Europe/London&quot;</span><span class="o">));</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读取音频文件的信息]]></title>
    <link href="http://ajia.github.com/blog/2013/05/06/du-qu-yin-pin-wen-jian-de-xin-xi/"/>
    <updated>2013-05-06T18:33:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/05/06/du-qu-yin-pin-wen-jian-de-xin-xi</id>
    <content type="html"><![CDATA[<p>项目里需要读取音频的播放时间，找了一个下午发现这个：jaudiotagger(http://www.jthink.net/jaudiotagger/)，它是一个音频标签JAVA库，目前支持 Mp3, Mp4 (Mp4 audio, M4a and M4p audio) Ogg Vorbis, Flac and Wma, 但是对Wav 和 Real 的支持有限。</p>

<!-- more -->


<p>读取m4a格式的播放时间</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 获取m4a格式文件的播放时间</span>
</span><span class='line'><span class="cm"> * @param filePath</span>
</span><span class='line'><span class="cm"> * @return</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getMp4AudioLength</span> <span class="o">(</span><span class="n">String</span> <span class="n">filePath</span><span class="o">){</span>
</span><span class='line'>  <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">filePath</span><span class="o">);</span>
</span><span class='line'>  <span class="n">Mp4FileReader</span> <span class="n">reader</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Mp4FileReader</span><span class="o">();</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>    <span class="n">AudioFile</span> <span class="n">f</span><span class="o">;</span>
</span><span class='line'>  <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">f</span> <span class="o">=</span> <span class="n">reader</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
</span><span class='line'>      <span class="n">AudioHeader</span> <span class="n">head</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="na">getAudioHeader</span><span class="o">();</span>
</span><span class='line'>      <span class="n">length</span> <span class="o">=</span> <span class="n">head</span><span class="o">.</span><span class="na">getTrackLength</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">CannotReadException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">TagException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ReadOnlyFileException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InvalidAudioFrameException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">length</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>读取mp3格式的播放时间</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm"> * 获取mp3格式文件的播放时间</span>
</span><span class='line'><span class="cm"> * @param filePath</span>
</span><span class='line'><span class="cm"> * @return</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="kd">public</span> <span class="kd">static</span> <span class="kt">int</span> <span class="nf">getMp3AudioLength</span> <span class="o">(</span><span class="n">String</span> <span class="n">filePath</span><span class="o">){</span>
</span><span class='line'>  <span class="n">File</span> <span class="n">file</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">filePath</span><span class="o">);</span>
</span><span class='line'>  <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="o">;</span>
</span><span class='line'>  <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">MP3File</span> <span class="n">f</span> <span class="o">=</span> <span class="o">(</span><span class="n">MP3File</span><span class="o">)</span><span class="n">AudioFileIO</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">file</span><span class="o">);</span>
</span><span class='line'>      <span class="n">MP3AudioHeader</span> <span class="n">audioHeader</span> <span class="o">=</span> <span class="n">f</span><span class="o">.</span><span class="na">getMP3AudioHeader</span><span class="o">();</span>
</span><span class='line'>      <span class="n">length</span> <span class="o">=</span> <span class="n">audioHeader</span><span class="o">.</span><span class="na">getTrackLength</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">CannotReadException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">TagException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">ReadOnlyFileException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InvalidAudioFrameException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'>  <span class="k">return</span> <span class="n">length</span><span class="o">;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[使用jave转换音视频格式]]></title>
    <link href="http://ajia.github.com/blog/2013/05/04/shi-yong-javezhuan-huan-yin-shi-pin-ge-shi/"/>
    <updated>2013-05-04T15:54:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/05/04/shi-yong-javezhuan-huan-yin-shi-pin-ge-shi</id>
    <content type="html"><![CDATA[<p>JAVE是用java包装ffmpeg的一个类库，可以自由的在各种音视频格式之间转换，它的jar包里就包含了ffmpeg的可执行文件，有linux和windows的，我为了在本机上调试，去ffmpeg的官网下了一个Mac OSX版本的。</p>

<p>官网地址：http://www.sauronsoftware.it/projects/jave/。养成去看官网的习惯很重要，英语差点的话可以先看中文的介绍，有个概念再去看官网的说明。</p>

<!-- more -->


<p>
我是直接用源代码跑的，方便调试问题。下面是mp3转换为m4a格式的一个例子，更多的例子和请去官网查看</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="cm">/**</span>
</span><span class='line'><span class="cm">     * 转化音频格式</span>
</span><span class='line'><span class="cm">     * @param s</span>
</span><span class='line'><span class="cm">     * @param t</span>
</span><span class='line'><span class="cm">     * @throws IllegalArgumentException</span>
</span><span class='line'><span class="cm">     * @throws InputFormatException</span>
</span><span class='line'><span class="cm">     * @throws EncoderException</span>
</span><span class='line'><span class="cm">     */</span>
</span><span class='line'>    <span class="kd">private</span> <span class="kt">void</span> <span class="nf">convertAudio</span><span class="o">(</span><span class="n">String</span> <span class="n">s</span><span class="o">,</span> <span class="n">String</span> <span class="n">t</span><span class="o">){</span>
</span><span class='line'>      <span class="n">File</span> <span class="n">source</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">s</span><span class="o">);</span>
</span><span class='line'>      <span class="n">File</span> <span class="n">target</span> <span class="o">=</span> <span class="k">new</span> <span class="n">File</span><span class="o">(</span><span class="n">t</span><span class="o">);</span>
</span><span class='line'>      <span class="n">AudioAttributes</span> <span class="n">audio</span> <span class="o">=</span> <span class="k">new</span> <span class="n">AudioAttributes</span><span class="o">();</span>
</span><span class='line'>      <span class="n">audio</span><span class="o">.</span><span class="na">setCodec</span><span class="o">(</span><span class="s">&quot;libmp3lame&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">audio</span><span class="o">.</span><span class="na">setBitRate</span><span class="o">(</span><span class="k">new</span> <span class="n">Integer</span><span class="o">(</span><span class="mi">128000</span><span class="o">));</span>
</span><span class='line'>      <span class="n">audio</span><span class="o">.</span><span class="na">setChannels</span><span class="o">(</span><span class="k">new</span> <span class="n">Integer</span><span class="o">(</span><span class="mi">2</span><span class="o">));</span>
</span><span class='line'>      <span class="n">audio</span><span class="o">.</span><span class="na">setSamplingRate</span><span class="o">(</span><span class="k">new</span> <span class="n">Integer</span><span class="o">(</span><span class="mi">44100</span><span class="o">));</span>
</span><span class='line'>      <span class="n">EncodingAttributes</span> <span class="n">attrs</span> <span class="o">=</span> <span class="k">new</span> <span class="n">EncodingAttributes</span><span class="o">();</span>
</span><span class='line'>      <span class="n">attrs</span><span class="o">.</span><span class="na">setFormat</span><span class="o">(</span><span class="s">&quot;mp4&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="n">attrs</span><span class="o">.</span><span class="na">setAudioAttributes</span><span class="o">(</span><span class="n">audio</span><span class="o">);</span>
</span><span class='line'>      <span class="n">Encoder</span> <span class="n">encoder</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Encoder</span><span class="o">();</span>
</span><span class='line'>      <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">encoder</span><span class="o">.</span><span class="na">encode</span><span class="o">(</span><span class="n">source</span><span class="o">,</span> <span class="n">target</span><span class="o">,</span> <span class="n">attrs</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IllegalArgumentException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">InputFormatException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">EncoderException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>          <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<p>转换的时候老是报错，抛出EncoderException异常，我查了一下源码，注释掉Encoder.java的864行</p>

<blockquote><blockquote><p>throw new EncoderException(line);</p></blockquote></blockquote>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[音乐播放器dewplayer的使用]]></title>
    <link href="http://ajia.github.com/blog/2013/05/04/yin-le-bo-fang-qi-dewplayerde-shi-yong/"/>
    <updated>2013-05-04T15:53:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/05/04/yin-le-bo-fang-qi-dewplayerde-shi-yong</id>
    <content type="html"><![CDATA[<p>介绍一个flash音乐播放器：dewplayer(法国的)<br/>
官网地址：http://www.alsacreations.fr/dewplayer.html。它提供几种风格，根据自己的需要选择一种风格。下面说一下用javascript来操作dewplayer</p>

<!-- more -->


<p>引入swfobject.js</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="o">&lt;</span><span class="nx">script</span> <span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/javascript&quot;</span> <span class="nx">src</span><span class="o">=</span><span class="s2">&quot;swfobject.js&quot;</span><span class="o">&gt;&lt;</span><span class="err">/script&gt;</span>
</span></code></pre></td></tr></table></div></figure>


<p>然后是js代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">dewp</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;dewplayerjs&quot;</span><span class="p">);</span>
</span><span class='line'><span class="kd">function</span> <span class="nx">play</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="nx">dewp</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span> <span class="nx">dewp</span><span class="p">.</span><span class="nx">dewplay</span><span class="p">();</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="kd">function</span> <span class="nx">stop</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="nx">dewp</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span> <span class="nx">dewp</span><span class="p">.</span><span class="nx">dewstop</span><span class="p">();</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="kd">function</span> <span class="nx">pause</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="nx">dewp</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span> <span class="nx">dewp</span><span class="p">.</span><span class="nx">dewpause</span><span class="p">();</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="kd">function</span> <span class="nx">next</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="nx">dewp</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span> <span class="nx">dewp</span><span class="p">.</span><span class="nx">dewnext</span><span class="p">();</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="kd">function</span> <span class="nx">prev</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="nx">dewp</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span> <span class="nx">dewp</span><span class="p">.</span><span class="nx">dewprev</span><span class="p">();</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="kd">function</span> <span class="nx">set</span><span class="p">(</span><span class="nx">file</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="nx">dewp</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span> <span class="nx">dewp</span><span class="p">.</span><span class="nx">dewset</span><span class="p">(</span><span class="nx">file</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="kd">function</span> <span class="nx">go</span><span class="p">(</span><span class="nx">index</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="nx">dewp</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span> <span class="nx">dewp</span><span class="p">.</span><span class="nx">dewgo</span><span class="p">(</span><span class="nx">index</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="kd">function</span> <span class="nx">setpos</span><span class="p">(</span><span class="nx">ms</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="nx">dewp</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span> <span class="nx">dewp</span><span class="p">.</span><span class="nx">dewsetpos</span><span class="p">(</span><span class="nx">ms</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="kd">function</span> <span class="nx">getpos</span><span class="p">()</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="nx">dewp</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span> <span class="nx">alert</span><span class="p">(</span><span class="nx">dewp</span><span class="p">.</span><span class="nx">dewgetpos</span><span class="p">());</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>          <span class="kd">function</span> <span class="nx">volume</span><span class="p">(</span><span class="nx">val</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>            <span class="k">if</span><span class="p">(</span><span class="nx">dewp</span><span class="o">!=</span><span class="kc">null</span><span class="p">)</span> <span class="nx">alert</span><span class="p">(</span><span class="nx">dewp</span><span class="p">.</span><span class="nx">dewvolume</span><span class="p">(</span><span class="nx">val</span><span class="p">));</span>
</span><span class='line'>          <span class="p">}</span>            
</span></code></pre></td></tr></table></div></figure>


<p></p>

<p>html代码</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='html'><span class='line'>     <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">&quot;dewplayer_content_js&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;object</span> <span class="na">data=</span><span class="s">&quot;dewplayer.swf&quot;</span> <span class="na">width=</span><span class="s">&quot;200&quot;</span> <span class="na">height=</span><span class="s">&quot;20&quot;</span> <span class="na">name=</span><span class="s">&quot;dewplayer&quot;</span> <span class="na">id=</span><span class="s">&quot;dewplayerjs&quot;</span> <span class="na">type=</span><span class="s">&quot;application/x-shockwave-flash&quot;</span><span class="nt">&gt;</span>
</span><span class='line'>      <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">&quot;movie&quot;</span> <span class="na">value=</span><span class="s">&quot;dewplayer.swf&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">&quot;flashvars&quot;</span> <span class="na">value=</span><span class="s">&quot;mp3=mp3/test1.mp3|mp3/test2.mp3|mp3/test3.mp3&amp;javascript=on&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;param</span> <span class="na">name=</span><span class="s">&quot;wmode&quot;</span> <span class="na">value=</span><span class="s">&quot;transparent&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/object&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/div&gt;</span>
</span><span class='line'>      <span class="nt">&lt;p&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;play();&quot;</span> <span class="na">value=</span><span class="s">&quot;Play&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;stop();&quot;</span> <span class="na">value=</span><span class="s">&quot;Stop&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;pause();&quot;</span> <span class="na">value=</span><span class="s">&quot;Pause&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;next();&quot;</span> <span class="na">value=</span><span class="s">&quot;Next&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;prev();&quot;</span> <span class="na">value=</span><span class="s">&quot;Prev&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;go(2);&quot;</span> <span class="na">value=</span><span class="s">&quot;Go(2)&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;set(&#39;mp3/test2.mp3&#39;);&quot;</span> <span class="na">value=</span><span class="s">&quot;Set mp3&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;set(&#39;mp3/test3.mp3&#39;);&quot;</span> <span class="na">value=</span><span class="s">&quot;Set another mp3&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;setpos(10000);&quot;</span> <span class="na">value=</span><span class="s">&quot;Set position 10 sec&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;getpos();&quot;</span> <span class="na">value=</span><span class="s">&quot;Get position&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;input</span> <span class="na">type=</span><span class="s">&quot;button&quot;</span> <span class="na">onclick=</span><span class="s">&quot;volume(50);&quot;</span> <span class="na">value=</span><span class="s">&quot;Set volume 50%&quot;</span> <span class="nt">/&gt;</span>
</span><span class='line'>      <span class="nt">&lt;/p&gt;</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[seo优化]]></title>
    <link href="http://ajia.github.com/blog/2013/04/27/seoyou-hua/"/>
    <updated>2013-04-27T17:10:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/04/27/seoyou-hua</id>
    <content type="html"><![CDATA[<p>添加 meta data description</p>

<p>文章生产时默认会生成 layout, title, date, comments, categories 这几项，如果多添加2个选项 ‘keywords’, ‘description’，会在 generate 文章的时候自动生成相应的 meta 标签
如果文章 header 写成这样</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>layout: post
</span><span class='line'>title: "SEO for Octopress"
</span><span class='line'>date: 2012-04-22 09:55
</span><span class='line'>comments: true
</span><span class='line'>categories: [seo,octopress]
</span><span class='line'>keywords: seo,octopress
</span><span class='line'>description: How to optimize Octopress for SEO</span></code></pre></td></tr></table></div></figure>


<p></p>

<!-- more -->


<p>生成的post head标签中会生成</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;title&gt;SEO for Octopress &lt;/title&gt;
</span><span class='line'>&lt;meta name="author" content="Yatish Mehta"&gt;
</span><span class='line'>&lt;meta name="description" content="How to optimize Octopress for SEO"&gt;
</span><span class='line'>&lt;meta name="keywords" content="seo,octopress"&gt;</span></code></pre></td></tr></table></div></figure>


<p>如果不想每次都得手动添加，可以修改 Rakefile文件</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>open(filename, 'w') do |post|
</span><span class='line'>  post.puts "---"
</span><span class='line'>  post.puts "layout: post"
</span><span class='line'>  post.puts "title: \"#{title.gsub(/&/,'&amp;')}\""
</span><span class='line'>  post.puts "date: #{Time.now.strftime('%Y-%m-%d %H:%M')}"
</span><span class='line'>  post.puts "comments: true"
</span><span class='line'>  post.puts "categories: "
</span><span class='line'>  post.puts "keywords: "
</span><span class='line'>  post.puts "description: "
</span><span class='line'>  post.puts "---"
</span><span class='line'>end</span></code></pre></td></tr></table></div></figure>


<p>上面的方法只能给每个 post 生成对应的 meta标签，如果要给主页添加 meta 标签，修改 source/_includes/head.html，添加以下内容</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>&lt;meta name="author" content="Ajia"&gt;
</span><span class='line'>
</span><span class='line'>&lt;meta name="description" content="Swim in the code, Ajia's blog"&gt;
</span><span class='line'>&lt;meta name="keywords" content="seo优化, octopress"&gt;</span></code></pre></td></tr></table></div></figure>


<p>在 _config.yml 文件中填充全局的 keywords 和 description, 比如这样</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>description: Ajia's blog
</span><span class='line'>keywords: java,算法,数据结构,web development,Ajax</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Sending 'ccColor4B' (aka 'struct _ccColor4B') to parameter of incompatible type 'CIColor *']]></title>
    <link href="http://ajia.github.com/blog/2013/04/22/sending-cccolor4b-aka-struct-cccolor4b-to-parameter-of-incompatible-type-cicolor-star/"/>
    <updated>2013-04-22T15:25:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/04/22/sending-cccolor4b-aka-struct-cccolor4b-to-parameter-of-incompatible-type-cicolor-star</id>
    <content type="html"><![CDATA[<p>升级cocos2d以后，编译项目，CCLayer.m的layerWithColor:(ccColor4B)color报错</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="n">Sending</span> <span class="err">&#39;</span><span class="n">ccColor4B</span><span class="err">&#39;</span> <span class="p">(</span><span class="n">aka</span> <span class="err">&#39;</span><span class="k">struct</span> <span class="n">_ccColor4B</span><span class="err">&#39;</span><span class="p">)</span> <span class="n">to</span> <span class="n">parameter</span>
</span><span class='line'> <span class="n">of</span> <span class="n">incompatible</span> <span class="n">type</span> <span class="err">&#39;</span><span class="n">CIColor</span> <span class="o">*</span><span class="err">&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<p>把</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">return</span> <span class="p">[[[</span><span class="n">self</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithColor:</span><span class="n">color</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>改成</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='objective-c'><span class='line'><span class="k">return</span> <span class="p">[[(</span><span class="n">CCColorLayer</span><span class="o">*</span><span class="p">)[</span><span class="n">self</span> <span class="n">alloc</span><span class="p">]</span> <span class="nl">initWithColor:</span><span class="n">color</span><span class="p">]</span> <span class="n">autorelease</span><span class="p">];</span>
</span></code></pre></td></tr></table></div></figure>


<p>就可以了</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[mysql创建function失败]]></title>
    <link href="http://ajia.github.com/blog/2013/04/16/mysqlchuang-jian-functionshi-bai/"/>
    <updated>2013-04-16T16:12:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/04/16/mysqlchuang-jian-functionshi-bai</id>
    <content type="html"><![CDATA[<p>出错信息：</p>

<p>创建function时</p>

<pre><code>ERROR 1418 (HY000): This function has none of DETERMINISTIC, NO SQL,
or READS SQL DATA in its declaration and binary logging is enabled 
(you might want to use the less safe log_bin_trust_function_creators variable)
</code></pre>

<p>原因：</p>

<p>这是我们开启了bin-log, 我们就必须指定我们的函数是否是
1 DETERMINISTIC 不确定的
2 NO SQL 没有SQl语句，当然也不会修改数据
3 READS SQL DATA 只是读取数据，当然也不会修改数据
4 MODIFIES SQL DATA 要修改数据
5 CONTAINS SQL 包含了SQL语句</p>

<p>其中在function里面，只有 DETERMINISTIC, NO SQL 和 READS SQL DATA 被支持。如果我们开启了 bin-log, 我们就必须为我们的function指定一个参数。</p>

<p>解决办法</p>

<pre><code>mysql&gt;show variables like '%func%';
+---------------------------------+-------+  
|Variable_name                  |Value|  
+---------------------------------+-------+  
|log_bin_trust_function_creators|OFF  |  
+---------------------------------+-------+  

set global log_bin_trust_function_creators=1;  

mysql&gt;show variables like '%func%';  
+---------------------------------+-------+  
|Variable_name                  |Value|  
+---------------------------------+-------+  
|log_bin_trust_function_creators|ON   |  
+---------------------------------+-------+  
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[hessian版本冲突的问题]]></title>
    <link href="http://ajia.github.com/blog/2013/04/11/hessianban-ben-chong-tu-de-wen-ti/"/>
    <updated>2013-04-11T17:53:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/04/11/hessianban-ben-chong-tu-de-wen-ti</id>
    <content type="html"><![CDATA[<p>项目需要调用远程的接口，用的是hessian，写了一段代码测试，结果报错</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">HessianProtocolException</span><span class="err">：</span><span class="n">expected</span> <span class="n">integer</span> <span class="n">at</span><span class="err">…</span>
</span></code></pre></td></tr></table></div></figure>


<p>非常简短，让人摸不着头脑。寻找了一段时间，在网上发现这样一句话</p>

<blockquote><blockquote><p>use hessian-4.<em> spring-3.</em>  resin-4.<em>. for Hessian protocol 2.And resin-3.</em>, spring-2.* hessian before 3.2.0 for Hessian protocol version 1.</p></blockquote></blockquote>

<p>看来是版本的问题，我的环境是resin-4.*、spring-2.*、hessian-4.*，后来改成用resin.3.1.13版本就正常了。接下来试试把spring升级到3。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jquery插件之cookie]]></title>
    <link href="http://ajia.github.com/blog/2013/04/09/jquerycha-jian-zhi-cookie/"/>
    <updated>2013-04-09T11:59:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/04/09/jquerycha-jian-zhi-cookie</id>
    <content type="html"><![CDATA[<p>Create session cookie:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s1">&#39;the_cookie&#39;</span><span class="p">,</span> <span class="s1">&#39;the_value&#39;</span><span class="p">);</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create expiring cookie, 7 days:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s1">&#39;the_cookie&#39;</span><span class="p">,</span> <span class="s1">&#39;the_value&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">expires</span><span class="o">:</span> <span class="mi">7</span> <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Create expiring cookie, valid across entire site:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s1">&#39;the_cookie&#39;</span><span class="p">,</span> <span class="s1">&#39;the_value&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">expires</span><span class="o">:</span> <span class="mi">7</span><span class="p">,</span> <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;/&#39;</span> <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>Read cookie:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s1">&#39;the_cookie&#39;</span><span class="p">);</span> <span class="c1">// =&gt; &quot;the_value&quot;</span>
</span><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="s1">&#39;not_existing&#39;</span><span class="p">);</span> <span class="c1">// =&gt; undefined</span>
</span></code></pre></td></tr></table></div></figure>


<p>Read all available cookies:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">();</span> <span class="c1">// =&gt; { &quot;the_cookie&quot;: &quot;the_value&quot;, &quot;...remaining&quot;: &quot;cookies&quot; }</span>
</span></code></pre></td></tr></table></div></figure>


<p>Delete cookie:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="c1">// Returns true when cookie was found, false when no cookie was found...</span>
</span><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">removeCookie</span><span class="p">(</span><span class="s1">&#39;the_cookie&#39;</span><span class="p">);</span>
</span><span class='line'><span class="c1">// Same path as when the cookie was written...</span>
</span><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">removeCookie</span><span class="p">(</span><span class="s1">&#39;the_cookie&#39;</span><span class="p">,</span> <span class="p">{</span> <span class="nx">path</span><span class="o">:</span> <span class="s1">&#39;/&#39;</span> <span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<!--more-->


<figure class='code'><figcaption><span> (jquery.cookie.js)</span> <a href='http://ajia.github.com/downloads/code/jquery.cookie.js'>download</a></figcaption>
 <div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
<span class='line-number'>42</span>
<span class='line-number'>43</span>
<span class='line-number'>44</span>
<span class='line-number'>45</span>
<span class='line-number'>46</span>
<span class='line-number'>47</span>
<span class='line-number'>48</span>
<span class='line-number'>49</span>
<span class='line-number'>50</span>
<span class='line-number'>51</span>
<span class='line-number'>52</span>
<span class='line-number'>53</span>
<span class='line-number'>54</span>
<span class='line-number'>55</span>
<span class='line-number'>56</span>
<span class='line-number'>57</span>
<span class='line-number'>58</span>
<span class='line-number'>59</span>
<span class='line-number'>60</span>
<span class='line-number'>61</span>
<span class='line-number'>62</span>
<span class='line-number'>63</span>
<span class='line-number'>64</span>
<span class='line-number'>65</span>
<span class='line-number'>66</span>
<span class='line-number'>67</span>
<span class='line-number'>68</span>
<span class='line-number'>69</span>
<span class='line-number'>70</span>
<span class='line-number'>71</span>
<span class='line-number'>72</span>
<span class='line-number'>73</span>
<span class='line-number'>74</span>
<span class='line-number'>75</span>
<span class='line-number'>76</span>
<span class='line-number'>77</span>
<span class='line-number'>78</span>
<span class='line-number'>79</span>
<span class='line-number'>80</span>
<span class='line-number'>81</span>
<span class='line-number'>82</span>
<span class='line-number'>83</span>
<span class='line-number'>84</span>
<span class='line-number'>85</span>
<span class='line-number'>86</span>
<span class='line-number'>87</span>
<span class='line-number'>88</span>
<span class='line-number'>89</span>
<span class='line-number'>90</span>
<span class='line-number'>91</span>
<span class='line-number'>92</span>
<span class='line-number'>93</span>
<span class='line-number'>94</span>
<span class='line-number'>95</span>
</pre></td><td class='code'><pre><code class='js'><span class='line'><span class="cm">/*!</span>
</span><span class='line'><span class="cm"> * jQuery Cookie Plugin v1.3.1</span>
</span><span class='line'><span class="cm"> * https://github.com/carhartl/jquery-cookie</span>
</span><span class='line'><span class="cm"> *</span>
</span><span class='line'><span class="cm"> * Copyright 2013 Klaus Hartl</span>
</span><span class='line'><span class="cm"> * Released under the MIT license</span>
</span><span class='line'><span class="cm"> */</span>
</span><span class='line'><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">factory</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>  <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">define</span> <span class="o">===</span> <span class="s1">&#39;function&#39;</span> <span class="o">&amp;&amp;</span> <span class="nx">define</span><span class="p">.</span><span class="nx">amd</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// AMD. Register as anonymous module.</span>
</span><span class='line'>      <span class="nx">define</span><span class="p">([</span><span class="s1">&#39;jquery&#39;</span><span class="p">],</span> <span class="nx">factory</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span> <span class="k">else</span> <span class="p">{</span>
</span><span class='line'>      <span class="c1">// Browser globals.</span>
</span><span class='line'>      <span class="nx">factory</span><span class="p">(</span><span class="nx">jQuery</span><span class="p">);</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">}(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">$</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">pluses</span> <span class="o">=</span> <span class="sr">/\+/g</span><span class="p">;</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">raw</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nx">s</span><span class="p">;</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">decoded</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">return</span> <span class="nb">decodeURIComponent</span><span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="nx">pluses</span><span class="p">,</span> <span class="s1">&#39; &#39;</span><span class="p">));</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">function</span> <span class="nx">converted</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">s</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="s1">&#39;&quot;&#39;</span><span class="p">)</span> <span class="o">===</span> <span class="mi">0</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// This is a quoted cookie as according to RFC2068, unescape</span>
</span><span class='line'>          <span class="nx">s</span> <span class="o">=</span> <span class="nx">s</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span> <span class="o">-</span><span class="mi">1</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\&quot;/g</span><span class="p">,</span> <span class="s1">&#39;&quot;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\\\\/g</span><span class="p">,</span> <span class="s1">&#39;\\&#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">try</span> <span class="p">{</span>
</span><span class='line'>          <span class="k">return</span> <span class="nx">config</span><span class="p">.</span><span class="nx">json</span> <span class="o">?</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">parse</span><span class="p">(</span><span class="nx">s</span><span class="p">)</span> <span class="o">:</span> <span class="nx">s</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span> <span class="k">catch</span><span class="p">(</span><span class="nx">er</span><span class="p">)</span> <span class="p">{}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>  <span class="kd">var</span> <span class="nx">config</span> <span class="o">=</span> <span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">value</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// write</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">value</span> <span class="o">!==</span> <span class="kc">undefined</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="nx">options</span> <span class="o">=</span> <span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span> <span class="nx">config</span><span class="p">.</span><span class="nx">defaults</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="k">typeof</span> <span class="nx">options</span><span class="p">.</span><span class="nx">expires</span> <span class="o">===</span> <span class="s1">&#39;number&#39;</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="kd">var</span> <span class="nx">days</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">expires</span><span class="p">,</span> <span class="nx">t</span> <span class="o">=</span> <span class="nx">options</span><span class="p">.</span><span class="nx">expires</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">Date</span><span class="p">();</span>
</span><span class='line'>              <span class="nx">t</span><span class="p">.</span><span class="nx">setDate</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">getDate</span><span class="p">()</span> <span class="o">+</span> <span class="nx">days</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="nx">value</span> <span class="o">=</span> <span class="nx">config</span><span class="p">.</span><span class="nx">json</span> <span class="o">?</span> <span class="nx">JSON</span><span class="p">.</span><span class="nx">stringify</span><span class="p">(</span><span class="nx">value</span><span class="p">)</span> <span class="o">:</span> <span class="nb">String</span><span class="p">(</span><span class="nx">value</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">return</span> <span class="p">(</span><span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span> <span class="o">=</span> <span class="p">[</span>
</span><span class='line'>              <span class="nx">config</span><span class="p">.</span><span class="nx">raw</span> <span class="o">?</span> <span class="nx">key</span> <span class="o">:</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">key</span><span class="p">),</span>
</span><span class='line'>              <span class="s1">&#39;=&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">config</span><span class="p">.</span><span class="nx">raw</span> <span class="o">?</span> <span class="nx">value</span> <span class="o">:</span> <span class="nb">encodeURIComponent</span><span class="p">(</span><span class="nx">value</span><span class="p">),</span>
</span><span class='line'>              <span class="nx">options</span><span class="p">.</span><span class="nx">expires</span> <span class="o">?</span> <span class="s1">&#39;; expires=&#39;</span> <span class="o">+</span> <span class="nx">options</span><span class="p">.</span><span class="nx">expires</span><span class="p">.</span><span class="nx">toUTCString</span><span class="p">()</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="c1">// use expires attribute, max-age is not supported by IE</span>
</span><span class='line'>              <span class="nx">options</span><span class="p">.</span><span class="nx">path</span>    <span class="o">?</span> <span class="s1">&#39;; path=&#39;</span> <span class="o">+</span> <span class="nx">options</span><span class="p">.</span><span class="nx">path</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">options</span><span class="p">.</span><span class="nx">domain</span>  <span class="o">?</span> <span class="s1">&#39;; domain=&#39;</span> <span class="o">+</span> <span class="nx">options</span><span class="p">.</span><span class="nx">domain</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span><span class="p">,</span>
</span><span class='line'>              <span class="nx">options</span><span class="p">.</span><span class="nx">secure</span>  <span class="o">?</span> <span class="s1">&#39;; secure&#39;</span> <span class="o">:</span> <span class="s1">&#39;&#39;</span>
</span><span class='line'>          <span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;&#39;</span><span class="p">));</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="c1">// read</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">decode</span> <span class="o">=</span> <span class="nx">config</span><span class="p">.</span><span class="nx">raw</span> <span class="o">?</span> <span class="nx">raw</span> <span class="o">:</span> <span class="nx">decoded</span><span class="p">;</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">cookies</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">cookie</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;; &#39;</span><span class="p">);</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">result</span> <span class="o">=</span> <span class="nx">key</span> <span class="o">?</span> <span class="kc">undefined</span> <span class="o">:</span> <span class="p">{};</span>
</span><span class='line'>      <span class="k">for</span> <span class="p">(</span><span class="kd">var</span> <span class="nx">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">,</span> <span class="nx">l</span> <span class="o">=</span> <span class="nx">cookies</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span> <span class="nx">i</span> <span class="o">&lt;</span> <span class="nx">l</span><span class="p">;</span> <span class="nx">i</span><span class="o">++</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">parts</span> <span class="o">=</span> <span class="nx">cookies</span><span class="p">[</span><span class="nx">i</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s1">&#39;=&#39;</span><span class="p">);</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">name</span> <span class="o">=</span> <span class="nx">decode</span><span class="p">(</span><span class="nx">parts</span><span class="p">.</span><span class="nx">shift</span><span class="p">());</span>
</span><span class='line'>          <span class="kd">var</span> <span class="nx">cookie</span> <span class="o">=</span> <span class="nx">decode</span><span class="p">(</span><span class="nx">parts</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s1">&#39;=&#39;</span><span class="p">));</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="nx">key</span> <span class="o">&amp;&amp;</span> <span class="nx">key</span> <span class="o">===</span> <span class="nx">name</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">result</span> <span class="o">=</span> <span class="nx">converted</span><span class="p">(</span><span class="nx">cookie</span><span class="p">);</span>
</span><span class='line'>              <span class="k">break</span><span class="p">;</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>          <span class="k">if</span> <span class="p">(</span><span class="o">!</span><span class="nx">key</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>              <span class="nx">result</span><span class="p">[</span><span class="nx">name</span><span class="p">]</span> <span class="o">=</span> <span class="nx">converted</span><span class="p">(</span><span class="nx">cookie</span><span class="p">);</span>
</span><span class='line'>          <span class="p">}</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>
</span><span class='line'>      <span class="k">return</span> <span class="nx">result</span><span class="p">;</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">config</span><span class="p">.</span><span class="nx">defaults</span> <span class="o">=</span> <span class="p">{};</span>
</span><span class='line'>
</span><span class='line'>  <span class="nx">$</span><span class="p">.</span><span class="nx">removeCookie</span> <span class="o">=</span> <span class="kd">function</span> <span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="nx">options</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>      <span class="k">if</span> <span class="p">(</span><span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="nx">key</span><span class="p">)</span> <span class="o">!==</span> <span class="kc">undefined</span><span class="p">)</span> <span class="p">{</span>
</span><span class='line'>          <span class="c1">// Must not alter options, thus extending a fresh object...</span>
</span><span class='line'>          <span class="nx">$</span><span class="p">.</span><span class="nx">cookie</span><span class="p">(</span><span class="nx">key</span><span class="p">,</span> <span class="s1">&#39;&#39;</span><span class="p">,</span> <span class="nx">$</span><span class="p">.</span><span class="nx">extend</span><span class="p">({},</span> <span class="nx">options</span><span class="p">,</span> <span class="p">{</span> <span class="nx">expires</span><span class="o">:</span> <span class="o">-</span><span class="mi">1</span> <span class="p">}));</span>
</span><span class='line'>          <span class="k">return</span> <span class="kc">true</span><span class="p">;</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>      <span class="k">return</span> <span class="kc">false</span><span class="p">;</span>
</span><span class='line'>  <span class="p">};</span>
</span><span class='line'>
</span><span class='line'><span class="p">}));</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[jquery的jsonp方式的ajax提交解决跨域的问题]]></title>
    <link href="http://ajia.github.com/blog/2013/04/08/jqueryde-jsonpfang-shi-de-ajaxti-jiao-jie-jue-kua-yu-de-wen-ti/"/>
    <updated>2013-04-08T17:45:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/04/08/jqueryde-jsonpfang-shi-de-ajaxti-jiao-jie-jue-kua-yu-de-wen-ti</id>
    <content type="html"><![CDATA[<p>jquery请求：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
</pre></td><td class='code'><pre><code class='javascript'><span class='line'><span class="kd">var</span> <span class="nx">action</span> <span class="o">=</span> <span class="nx">form</span><span class="p">.</span><span class="nx">attr</span><span class="p">(</span><span class="s2">&quot;action&quot;</span><span class="p">);</span>
</span><span class='line'><span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">({</span>
</span><span class='line'>  <span class="nx">type</span><span class="o">:</span><span class="s2">&quot;get&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">data</span><span class="o">:</span> <span class="p">{</span>
</span><span class='line'>      <span class="nx">mobile</span> <span class="o">:</span> <span class="nx">$</span><span class="p">(</span><span class="s1">&#39;#mobile&#39;</span><span class="o">+</span><span class="nx">id</span><span class="p">).</span><span class="nx">val</span><span class="p">()</span>
</span><span class='line'>  <span class="p">},</span>
</span><span class='line'>  <span class="nx">url</span><span class="o">:</span><span class="nx">action</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">dataType</span><span class="o">:</span><span class="s2">&quot;jsonp&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">jsonp</span><span class="o">:</span><span class="s2">&quot;callback&quot;</span><span class="p">,</span>
</span><span class='line'>  <span class="nx">success</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">data</span><span class="p">){</span>
</span><span class='line'>      <span class="kd">var</span> <span class="nx">res</span> <span class="o">=</span> <span class="nb">eval</span><span class="p">(</span><span class="nx">data</span><span class="p">);</span>
</span><span class='line'>      <span class="k">if</span><span class="p">(</span><span class="nx">res</span><span class="p">.</span><span class="nx">resultObj</span><span class="p">.</span><span class="nx">result</span><span class="p">){</span>
</span><span class='line'>          <span class="nx">alert</span><span class="p">(</span><span class="s2">&quot;发送成功&quot;</span><span class="p">);</span>
</span><span class='line'>      <span class="p">}</span>
</span><span class='line'>  <span class="p">}</span>
</span><span class='line'><span class="p">});</span>
</span></code></pre></td></tr></table></div></figure>


<p>服务器端：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">response</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="s">&quot;text/html; charset=utf-8&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Pragma&quot;</span><span class="o">,</span> <span class="s">&quot;No-cache&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">response</span><span class="o">.</span><span class="na">setDateHeader</span><span class="o">(</span><span class="s">&quot;Expires&quot;</span><span class="o">,</span> <span class="mi">0</span><span class="o">);</span>
</span><span class='line'><span class="n">response</span><span class="o">.</span><span class="na">setHeader</span><span class="o">(</span><span class="s">&quot;Cache-Control&quot;</span><span class="o">,</span> <span class="s">&quot;no-cache&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">PrintWriter</span> <span class="n">out</span> <span class="o">=</span> <span class="n">response</span><span class="o">.</span><span class="na">getWriter</span><span class="o">();</span>
</span><span class='line'><span class="c1">//业务逻辑</span>
</span><span class='line'><span class="n">String</span> <span class="n">callback</span> <span class="o">=</span> <span class="n">request</span><span class="o">.</span><span class="na">getParameter</span><span class="o">(</span><span class="s">&quot;callback&quot;</span><span class="o">);</span>
</span><span class='line'><span class="n">result</span> <span class="o">=</span> <span class="n">callback</span><span class="o">+</span><span class="s">&quot;(&quot;</span><span class="o">+</span><span class="n">resultJson</span><span class="o">.</span><span class="na">toString</span><span class="o">()+</span><span class="s">&quot;)&quot;</span><span class="o">;</span>
</span><span class='line'><span class="n">out</span><span class="o">.</span><span class="na">print</span><span class="o">(</span><span class="n">result</span><span class="o">);</span>
</span><span class='line'><span class="n">out</span><span class="o">.</span><span class="na">flush</span><span class="o">();</span>
</span><span class='line'><span class="n">out</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[遇上MySql的奇怪问题]]></title>
    <link href="http://ajia.github.com/blog/2013/04/08/yu-shang-mysqlde-qi-guai-wen-ti/"/>
    <updated>2013-04-08T17:25:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/04/08/yu-shang-mysqlde-qi-guai-wen-ti</id>
    <content type="html"><![CDATA[<p>今天遇上一个异常：</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>2013-04-08 15:35:47 072 [ERROR] JDBC commit failed [org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:124)]
</span><span class='line'>com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: Communications link failure during commit(). Transaction resolution unknown.
</span><span class='line'>  at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
</span><span class='line'>  at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)
</span><span class='line'>  at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
</span><span class='line'>  at java.lang.reflect.Constructor.newInstance(Constructor.java:532)
</span><span class='line'>  at com.mysql.jdbc.Util.handleNewInstance(Util.java:407)
</span><span class='line'>  at com.mysql.jdbc.Util.getInstance(Util.java:382)
</span><span class='line'>  at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1013)
</span><span class='line'>  at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:987)
</span><span class='line'>  at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:982)
</span><span class='line'>  at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:927)
</span><span class='line'>  at com.mysql.jdbc.ConnectionImpl.commit(ConnectionImpl.java:1672)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
</span><span class='line'>  at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
</span><span class='line'>  at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
</span><span class='line'>  at java.lang.reflect.Method.invoke(Method.java:616)
</span><span class='line'>  at org.logicalcobwebs.proxool.WrappedConnection.invoke(WrappedConnection.java:162)
</span><span class='line'>  at org.logicalcobwebs.proxool.WrappedConnection.intercept(WrappedConnection.java:87)
</span><span class='line'>  at $java.sql.Connection$$EnhancerByProxool$$90ddbb0c.commit(&lt;generated&gt;)
</span><span class='line'>  at org.hibernate.transaction.JDBCTransaction.commitAndResetAutoCommit(JDBCTransaction.java:139)
</span><span class='line'>  at org.hibernate.transaction.JDBCTransaction.commit(JDBCTransaction.java:115)
</span><span class='line'>  at org.springframework.orm.hibernate3.HibernateTransactionManager.doCommit(HibernateTransactionManager.java:596)
</span><span class='line'>  at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:709)
</span><span class='line'>  at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:678)
</span><span class='line'>  at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:319)
</span><span class='line'>  at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:116)
</span><span class='line'>  at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:171)
</span><span class='line'>  at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:204)
</span><span class='line'>  at $Proxy163.importDate(Unknown Source)</span></code></pre></td></tr></table></div></figure>


<p>找了一个上午和半个下午终于解决了，原因是线上的数据库服务器关掉了innodb引擎，myisam对事务支持有问题，所以修改spring的配置文件，把事务的配置去掉就可以了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HttpClient上传文件]]></title>
    <link href="http://ajia.github.com/blog/2013/04/07/httpclientshang-chuan-wen-jian/"/>
    <updated>2013-04-07T21:44:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/04/07/httpclientshang-chuan-wen-jian</id>
    <content type="html"><![CDATA[<p>折腾了一下用HttpClient上传文件，主要是不需要设置“multipart/form-data”,否则会出现“the request was rejected because no multipart boundary was found”</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
<span class='line-number'>40</span>
<span class='line-number'>41</span>
</pre></td><td class='code'><pre><code class='java'><span class='line'><span class="n">PostMethod</span> <span class="n">method</span> <span class="o">=</span> <span class="k">new</span> <span class="n">PostMethod</span><span class="o">(</span><span class="n">url</span><span class="o">);</span>
</span><span class='line'>  <span class="n">Part</span><span class="o">[]</span> <span class="n">part</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Part</span><span class="o">[</span><span class="n">params</span><span class="o">.</span><span class="na">size</span><span class="o">()+</span><span class="mi">1</span><span class="o">];</span>
</span><span class='line'>    <span class="n">Set</span><span class="o">&lt;</span><span class="n">String</span><span class="o">&gt;</span> <span class="n">keySet</span> <span class="o">=</span> <span class="n">params</span><span class="o">.</span><span class="na">keySet</span><span class="o">();</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="o">;</span>
</span><span class='line'>    <span class="k">for</span><span class="o">(</span><span class="n">String</span> <span class="n">key</span> <span class="o">:</span> <span class="n">keySet</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">String</span> <span class="n">value</span> <span class="o">=</span> <span class="n">params</span><span class="o">.</span><span class="na">get</span><span class="o">(</span><span class="n">key</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span><span class="o">(</span><span class="n">StringUtil</span><span class="o">.</span><span class="na">isNotNull</span><span class="o">(</span><span class="n">value</span><span class="o">)){</span>
</span><span class='line'>          <span class="n">part</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringPart</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="n">value</span><span class="o">,</span> <span class="s">&quot;UTF-8&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span><span class="k">else</span><span class="o">{</span>
</span><span class='line'>          <span class="n">part</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="k">new</span> <span class="n">StringPart</span><span class="o">(</span><span class="n">key</span><span class="o">,</span> <span class="s">&quot;&quot;</span><span class="o">,</span> <span class="s">&quot;UTF-8&quot;</span><span class="o">);</span>
</span><span class='line'>      <span class="o">}</span>
</span><span class='line'>      <span class="n">i</span><span class="o">++;</span>
</span><span class='line'>    <span class="o">}</span>
</span><span class='line'>    <span class="n">FilePart</span> <span class="n">fp</span> <span class="o">=</span> <span class="k">new</span>  <span class="n">FilePart</span><span class="o">(</span><span class="s">&quot;image&quot;</span><span class="o">,</span> <span class="n">file</span><span class="o">);</span>
</span><span class='line'>    <span class="n">fp</span><span class="o">.</span><span class="na">setContentType</span><span class="o">(</span><span class="n">MIME</span><span class="o">.</span><span class="na">ENC_BINARY</span><span class="o">);</span>
</span><span class='line'>    <span class="n">part</span><span class="o">[</span><span class="n">i</span><span class="o">]</span> <span class="o">=</span> <span class="n">fp</span><span class="o">;</span>
</span><span class='line'>    <span class="n">HttpConnectionManagerParams</span> <span class="n">managerParams</span> <span class="o">=</span> <span class="n">httpClient</span><span class="o">.</span><span class="na">getHttpConnectionManager</span><span class="o">().</span><span class="na">getParams</span><span class="o">();</span>
</span><span class='line'>    <span class="n">managerParams</span><span class="o">.</span><span class="na">setConnectionTimeout</span><span class="o">(</span><span class="mi">3000000</span><span class="o">);</span>
</span><span class='line'>     <span class="n">managerParams</span><span class="o">.</span><span class="na">setSoTimeout</span><span class="o">(</span><span class="mi">12000000</span><span class="o">);</span>
</span><span class='line'>    <span class="kt">int</span> <span class="n">statusCode</span><span class="o">;</span>
</span><span class='line'>  <span class="k">try</span> <span class="o">{</span>
</span><span class='line'>        <span class="n">MultipartRequestEntity</span> <span class="n">mrp</span><span class="o">=</span> <span class="k">new</span>  <span class="n">MultipartRequestEntity</span><span class="o">(</span><span class="n">part</span><span class="o">,</span> <span class="n">method</span><span class="o">.</span><span class="na">getParams</span><span class="o">());</span>
</span><span class='line'>        <span class="n">method</span><span class="o">.</span><span class="na">setRequestEntity</span><span class="o">(</span><span class="n">mrp</span><span class="o">);</span>
</span><span class='line'>        <span class="n">statusCode</span> <span class="o">=</span> <span class="n">httpClient</span><span class="o">.</span><span class="na">executeMethod</span><span class="o">(</span><span class="n">method</span><span class="o">);</span>
</span><span class='line'>      <span class="k">if</span><span class="o">(</span><span class="n">statusCode</span> <span class="o">!=</span> <span class="n">HttpStatus</span><span class="o">.</span><span class="na">SC_OK</span><span class="o">){</span>
</span><span class='line'>          <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="s">&quot;Method failed code=&quot;</span> <span class="o">+</span> <span class="n">statusCode</span> <span class="o">+</span> <span class="s">&quot;: &quot;</span> <span class="o">+</span> <span class="n">method</span><span class="o">.</span><span class="na">getStatusLine</span><span class="o">());</span>
</span><span class='line'>        <span class="o">}</span><span class="k">else</span><span class="o">{</span>
</span><span class='line'>          <span class="n">InputStream</span> <span class="n">inputStream</span> <span class="o">=</span> <span class="n">method</span><span class="o">.</span><span class="na">getResponseBodyAsStream</span><span class="o">();</span>
</span><span class='line'>            <span class="n">BufferedReader</span> <span class="n">br</span> <span class="o">=</span> <span class="k">new</span> <span class="n">BufferedReader</span><span class="o">(</span><span class="k">new</span> <span class="n">InputStreamReader</span><span class="o">(</span><span class="n">inputStream</span><span class="o">,</span> <span class="s">&quot;UTF-8&quot;</span><span class="o">));</span>
</span><span class='line'>            <span class="n">String</span> <span class="n">str</span><span class="o">=</span> <span class="s">&quot;&quot;</span><span class="o">;</span>
</span><span class='line'>            <span class="k">while</span><span class="o">((</span><span class="n">str</span> <span class="o">=</span> <span class="n">br</span><span class="o">.</span><span class="na">readLine</span><span class="o">())</span> <span class="o">!=</span> <span class="kc">null</span><span class="o">){</span>
</span><span class='line'>              <span class="n">response</span> <span class="o">.</span><span class="na">append</span><span class="o">(</span><span class="n">str</span><span class="o">);</span>
</span><span class='line'>            <span class="o">}</span>
</span><span class='line'>        <span class="o">}</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">HttpException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">catch</span> <span class="o">(</span><span class="n">IOException</span> <span class="n">e</span><span class="o">)</span> <span class="o">{</span>
</span><span class='line'>      <span class="n">log</span><span class="o">.</span><span class="na">error</span><span class="o">(</span><span class="n">e</span><span class="o">.</span><span class="na">getMessage</span><span class="o">(),</span> <span class="n">e</span><span class="o">);</span>
</span><span class='line'>  <span class="o">}</span> <span class="k">finally</span><span class="o">{</span>
</span><span class='line'>      <span class="n">method</span><span class="o">.</span><span class="na">releaseConnection</span><span class="o">();</span>
</span><span class='line'>  <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[如何获得创业点子]]></title>
    <link href="http://ajia.github.com/blog/2013/04/04/ru-he-huo-de-chuang-ye-dian-zi/"/>
    <updated>2013-04-04T22:27:00+08:00</updated>
    <id>http://ajia.github.com/blog/2013/04/04/ru-he-huo-de-chuang-ye-dian-zi</id>
    <content type="html"><![CDATA[<p>  硅谷创业教父、创业公司孵化器YC创始人保罗·格雷厄姆(Paul Graham)本月发表了一篇题为《如何获得创业点子》的文章，从创业点子的发现、筛选、竞争以及学校教育等多个角度为创业者详细指点了如何才能得到真正有用的创业点子。他指出，创业者需要去发现身边的问题，而不要凭空想象。大多数好的创业点子最初都是只针对很小的特定用户群体。</p>

<p>　　创业之前最需要做的并不是想创业点子，而是去发现问题。说不定你自己头疼的事情就有可能是潜在的商机。</p>

<p>　　最好的创业点子具有三点共性：它们是创始人自己想做而且有能力实现的，另外，很少有人意识到其价值。当今的巨鳄们如微软、苹果、雅虎、谷歌和Facebook都是凭借这样的好点子起家的。</p>

<!--more-->


<h4>发现问题</h4>

<p>　　为什么说要重视自己身边的问题？因为自己身边的问题是实际存在的，着眼于这些问题必然强过自己闭门造车。这一点是显而易见的，用户需要产品能够解决实际存在的问题而不是不着边际地空想出来的问题。</p>

<p>　　1995年，我自己成立过一个公司，为画廊提供在线画廊服务。但是画廊的老板们显然根本不想把自己展出的画放到网络上。这压根就不是艺术品行业能接受的商业模式。我为了去实现这个看起来很蠢实际上也很蠢的点子花了整整六个月。而直到被一个个客户完全否决后才让我认识到这个点子有多么的不切实际。即使一次次打击之后，一种怀才不遇的郁闷还一直支配着自己，让自己愚蠢地相信努力不会白费。</p>

<p>　　可惜直到现在，仍然有一些创业者们执着于一些谁也不会关心的点子。他们的问题和我之前一样：为了创业而去想问题而不是为了解决问题而去创业。正因为如此，他们为了一些不切实际的点子去做着无用功。在投资界，我们把这些创业公司的点子叫做“made-up”(捏造)或者是“sitcom”(情景喜剧)。这就像是一个为了讲述创业历程的电视节目，编剧们为了生存必须去捏造一些点子让“创业公司”去开发。但是真正好的创业点子是可遇不可求的。并不是编剧们想想就能找到(除非他们真的够走运)，大部分情况下他们可能想到一些听起来蛮不错的点子，但是实际上却糟糕到完全没有人关心。</p>

<p>　　举一个比较有代表性的例子，开发一个针对宠物爱好者的社交网络。这个点子听起来似乎很合理。毕竟成千上万的人都在养宠物，而大多数主人都很关心自己的宠物并且愿意为自己的宠物花钱。自然这些人中可能会有一些想要有这么一个可以互相交流的网站。虽然不是全部，但是至少也有2%到3%的人会经常访问。这样算起来，这个网站的固定用户也有好几百万。网站可以向他们发送定向广告或者提供收费服务。</p>

<p>　　对于这种听起来很合理的点子。当创业者们去征求有宠物的朋友们的点子的时候，没有人会说：“我绝对不会用这东西。”相反，他们都会表现出比较深厚的兴趣。在这个网站刚上线时，可能会有很多人觉得这东西很实用。但是绝大多数这样想的人自己并不会去使用它，即使他们总觉得其他人有可能在用。但是到头来，虽然这个网站口碑不错，看起来也不错，但是却实际上根本没有用户会真正用到它。</p>

<h4>打井</h4>

<p>　　当一家创业公司成立时，一定得有一些真正的用户需要他们的产品。需要注意的是，所谓真正的用户一定要是非常急切的想要它的固定用户，而不是一些用了一次就再不用的尝鲜者。通常来说，这个用户群体刚开始会比较小，因为如果是大多数人都需要而又是一个几个人就能够实现的东西肯定早就已经面世几百年了。所以创业者们需要做出妥协，要么开发一个针对巨大的用户群但是使用频率比较低的产品，要么开发一个针对小用户群但是使用频率比较高的产品。后一种选择中可能大部分点子都不一定好，但是好的创业公司基本上都是靠这样的点子起步的。</p>

<p>　　像谷歌这样的大公司同时投资着很多的项目，应该说这些大公司的产品几乎涵盖了所有人的大部分需求。要想在大公司们的夹缝中取得生存空间，创业公司就需要将自己的全部精力投入到一个产品并将它做好，也就是“术业有专攻”。我们可以把创业想象成挖洞，你可以选择挖一个很大但很浅的坑，也可以挖一个很窄但很深的洞，就好比打一口井。</p>

<p>　　编造的想法通常属于第一种。许多人痴迷于针对宠物主人的社交网络这样的想法。</p>

<p>　　几乎所有好的创业点子都是第二种，如微软的第一个产品Altair Basic。当时Altair电脑只有数千名用户，但是如果没有微软的产品，他们只能用硬件语言编程。三十年后，Facebook走了微软的老路，它在设计之初仅仅针对哈佛的学生们。大概也就几千人的规模。但是正是这几千人却非常渴望这种产品的出现。</p>

<p>　　对于创业者们来说，创业之前最需要考虑的两个问题是：目前哪些人需要什么？哪些人非常想用这个产品，即使它还只是两个名不见经传的人做出来的，而且是漏洞百出的测试版。如果这两个问题的答案还不明确，还请三思而后行。</p>

<p>　　你需要的不是井本身的“窄”，而是它的“深”。窄只是深(和速度)的副产品。实际上，这两者实际上是紧密联系的。当你知道产品将吸引特定用户群或用户类型时，这是个好迹象。</p>

<p>　　但是，小范围用户群的需求是好创业点子的必要条件，但不是充分条件。如果马克 扎克伯格(Mark Zuckerberg)的产品永远只停留在为哈佛学生服务的层面上，那么他就不会像现在这样成功了。Facebook之所以成功是因为它在小范围市场中取得成功后迅速扩张到了更大的市场。当Facebook在哈佛这样的学校成功之后，与之类似的大学生市场很快就接纳了它。当所有的大学都加入进来之后，其他用户都蜂拥而至。</p>

<p>　　Facebook实际上走着微软当年所走过的路：从仅仅支持Altair的Basic开始，到支持所有电脑的Basic，再到支持Basic之外的语言，再扩张到操作系统、应用程序，最后上市。</p>

<h4>直觉</h4>

<p>　　如何判断自己的产品是否可以扩张到更大的市场？如何判断自己的产品是否正是大公司渴求的产品或者只是一个不会受重视的小玩意？大部分时候创业者们自己也很迷惑。Airbnb创始人一开始也没有意识到自己开启了多么大的市场。最开始他们只是想针对某些用户做一个好产品。他们为房东们提供了一个可以将自己家里面多余空间出租的平台。但是他们并没有预料到这个市场可以扩大，直到事实摆在他们眼前他们不得不跟进更多用户的需求。他们最开始只知道需要做好这个产品。这也许正是比尔 盖茨(Bill Gates)或者扎克伯格最开始所想的。</p>

<p>　　或许有些点子在设想之初就想好了扩张的过程。或者有一些投资专家能在一家创业公司最初的产品上规划这个产品的未来。但是无论创业者多么有经验，这些规划所能预测的都很有限。因此，对于创业者们来说，首先需要铭记于心的一点是：扩张的过程是难以预见的。</p>

<p>　　这就引出了另外一个问题：如果创业者们不确定自己的哪个点子能做大，如何在这些点子中做出抉择？这个问题的答案虽然听起来令人沮丧，但是却引人思考：如果你是那样的人，就会有正确的直觉。如果你处在快速变化的行业最前沿，当你有直觉认为值得去做的点子时，往往这就是最正确的选择。</p>

<p>　　在《Zen and the Art of Motorcycle Maintenance》(摩托车维修的禅与艺术)一书中，罗伯特•波西格(Robert Pirsig)写道：</p>

<p>　　“你想去完成一幅完美的画作？很简单。保持自己最好状态按你自己想的去画就行。”</p>

<p>　　同样的道理，最好的创业点子来自于那些需要这些产品的人。</p>

<p>　　所谓处在行业最前沿并不意味着要是那些推动行业前进的人。你也可以是使用这种行业产品的用户。正如扎克伯格能想到Facebook这个好点子并不一定因为他是程序员，而是因为他也是一个电脑用户。如果在2004年问一群40岁的人他们想不想把自己的生活公布在网络上，他们肯定以为问的人是疯子。但是扎克伯格却会觉得这个点子很自然，因为他已经长期使用网络。</p>

<p>　　保罗•布赫海特(Paul Buchheit，YC合伙人，Gmail之父)认为，那些处在高速变化的行业最前沿的人“实际上生活在未来”。结合波西格的名言可以总结为：</p>

<p>　　活在未来，打造这个世界上缺少的东西。</p>

<p>　　几乎所有的创业公司都是通过这种方式开始的。苹果、雅虎、谷歌和Facebook最开始并不是一个公司。他们的创始人们灵机一动的好产品缔造了这些伟大的公司。</p>

<p>　　回头看一下这些创始人的成功历程，他们的成功几乎都是一个机遇契合了他们有准备的头脑。当比尔•盖茨和保罗•艾伦(Paul Allen)听说了Altair电脑的问世，第一个点子就是“我们可以为它写一个Basic解释器”。德鲁•休斯敦(Drew Houston)发现他忘了带U盘时就想到“如果可以把文件放在网络里面并随时可以访问就好了。”听说过Altair电脑的人很多，忘带U盘的人更多。但是只有这些有着充分准备的人注意到了其中的问题并把握了机遇。</p>

<p>　　对于渴求创业点子的创业者来说，“发现”比“想”更重要。YC将这种从创业者自身经历中诞生的创业点子称为“有机创业点子”。最成功的创业公司往往是以这种方式开始的。</p>

<p>　　这可能不是创业者们喜欢听的话。他们想要的是找到好创业点子的窍门，而不是要他们去做好准备。但是这确实是无可争辩的真理。其实这也可以算做是一种窍门，只是这个方法需要长时间的积累。</p>

<p>　　对于并不处在技术发展前沿的人，想创业就得去主动去接触这些知识。事实上，只要智力正常的人都可以在一年内学会最新的编程技术。一家成功的创业公司将至少要发展3-5年，相比之下，一年的准备时间是一笔划算的投资。尤其是如果你想寻找创业合伙人。</p>

<p>　　要处于快速变化的行业前沿，并非必须学习编程。掌握编程技术是并不是创业的必要条件，但是一个很不错的选择。正如马克•安德森(Marc Andreessen)所说，软件正在入侵世界的每一个角落，而这个过程还将持续几十年。</p>

<p>　　熟练的掌握技术意味着当创业者有好的点子的时候，可以自己去实现这个点子。虽然这不是必须的(比如亚马逊的创始人杰夫•贝佐斯(Jeff Bezos)就不懂编程)，但是这可以成为创业者的一个优势。同样是想出Facebook这个点子的人，不懂技术的人只能说：“这是个不错的点子。”但是懂技术的人就会说：“这点子不错，我可以试试今天晚上把它搞出来。”更好的是自己是开发人员兼用户，这样测试也可以自己解决了。</p>

<h4>留意</h4>

<p>　　如果你生活在未来，获得创业点子的方式是寻找那些缺少的东西。如果你真的处于快速变化的领域最前沿，就会发现一些明显缺少的东西。不明显的是它们正是创业点子。因此，如果你想要发现创业点子，不要仅仅开启“缺少什么”这个筛选条件，同时还要关闭其他所有筛选条件，特别是“我们能成长为一家大公司吗？”。如果最开始就考虑这些事，你不仅会错过很多好的创业点子，还会让自己专注于错误的点子。</p>

<p>　　大多数缺少的东西都需要人们花时间来发现，你必须留意身边的点子。</p>

<p>　　当遇到的问题得到解决时，回想起来你会发现这些问题其实非常明显。你需要关闭通常妨碍你发现它们的筛选条件。这时候最有效的方法就是认为当前的状态是理所当然的，我们中思想最开明的人都经常这么做。如果停下来质疑所有事情，你就无法前进一步。</p>

<p>　　但是，寻找创业点子时，你可以牺牲一些认为现状是理所当然的效率，并且开始质疑某些事情。为什么你的收件箱总是满的？因为你收到了许多邮件，或者你没有从收件箱删除任何邮件。为什么你收到了这么多邮件？人们给你发邮件，希望你帮忙他们解决什么？这些问题有更好的解决办法吗？为什么很难从收件箱删除邮件？为什么在阅读邮件后不删除它们？你的收件箱是处理这些事情的最佳工具吗？</p>

<p>　　要特别注意那些让你感到头痛的事情。认为当前所处的状态是理所当然的不仅能够使生活更高效，也使得人更有忍耐力。如果你知道在未来50年里会发生什么事情，你将会发现现在生活的拘束性，就如同科幻小说里利用时光机把人们送回50年前所感觉到的那样。某些事情会让你感到苦恼是因为你生活在未来。</p>

<p>　　当你发现了正确的问题时，应当至少对你自己将它描述得很明显。当我们开发Viaweb时，所有在线商店都是网页设计师用单个HTML页面组建的。我们作为程序员，便会明显觉得这些网站可以用软件生成。</p>

<p>　　这意味着，想出创业点子是关于发现明显的事情。你必须重新审视那些看起来很明显以及那些你还没有发现的事情。你需要放松你的大脑，尝试着换个角度来看待问题。寻找缺少的东西，努力解决难题，同时关注空白地带和异常的事情。</p>

<p>　　给自己一些时间，你知道自己何时会准备妥当，但你不知道点子会在什么时候出现。如果比尔•盖茨和保罗•艾伦强迫自己在Altair电脑出现前一个月内想出创业点子，那么他们可能就不会创造出微软这么伟大的公司了。</p>

<p>　　让自己发现点子的一个好方法就是做一些很酷的事情。做那些事便会自然而然的发现缺失的东西，创建已经存在的东西就没那么有趣。</p>

<p>　　就如同在思考创业点子的同时也会产生坏主意一样，做那些看起来像“玩具”的东西也会让你发现好的点子。当某个东西看起来像“玩具”时，这也意味着它具有点子所拥有的一切东西(除重要性意外)。它很酷，用户喜欢，只是重要性不够。但如果你生活在未来并打造某个用户喜欢而且很酷的东西时，它的重要性可能超过外行的看法。当苹果和微软刚开始开发微型计算机时，人们普遍认为它是玩具。BackRub(谷歌搜索引擎最初的名字)曾经看起来像微不足道的科学项目。Facebook最初只是本科生相互悄悄跟踪的方式。</p>

<p>　　YC孵化的很多企业都在做那些被外界认为像“玩具”的事情，在我们看来这就证明了这些企业拥有非常好的点子。</p>

<p>　　如果你拥有长远的眼光，你就能够把“生活在未来并打造缺少的东西”这件事做得更好。</p>

<p>　　生活在未来并做有趣的事情。</p>

<h4>学校</h4>

<p>　　我建议大学生试着去做事情，而不是学习“企业家精神”。只有亲身去“创业”，你才能更好的了解它，那些成功创业者的例子已经很清楚地说明了这一点。在大学你应当规划自己的未来，学校是做这件事情的最好场所。不要耗费时间来学习创业最容易的部分，你应当试着成为具有创业潜质的人。</p>

<p>　　领域之间的碰撞是创意的源泉。如果你懂编程，并且开始学习其它领域，你将会发现很多问题都能够用软件解决。实际上，你将会在其它领域发现新的问题。</p>

<p>　　因此，如果你是计算机系的学生，并且想要创业。你最好能够先去一家生物科技公司工作。计算机系的学生通常能够在计算机硬件或软件公司进行暑期实习，而不是学习与企业家精神相关的课程。但如果想要寻找创业点子，你最好能够在一些与计算机不相关的领域进行实习。或者干脆直接开始创业。微软和Facebook都是1月份成立的，因为在哈佛大学1月份是阅读季，学生们没有任何课程，这为创业提供了条件。</p>

<p>　　但是不要认为自己所做的事最终都能实现创业，这还太早。试着与其他同学共事，大学是一个人规划未来的好地方，周围的人们和你做着相同的事情。如果和他们共同做一件事情，你将不仅能收获好的点子，也能收获好的创始团队。</p>

<p>　　当心研究。如果一名本科生写了一篇论文，内容是关于他的朋友们已经开始使用的某些东西，那么这很有可能意味着一个好的创业点子的出现，博士论文则不会出现这样的结果。一个点子的研究成分越重，它就越不可能用于创业。因为研究的范围往往比较狭窄，因而不太可能满足所有人的要求。而当你的点子是为了解决用户的问题时，你通常能够摆脱学术研究带来的局限性。</p>

<h4>竞争</h4>

<p>　　好的点子似乎是显而易见的，当你拥有它的时候通常会觉得已经晚了。但不要沮丧，担心自己起步晚了是好点子出现的标志。即使你发现其他人也在做同样的事情，你也不会太晚。初创企业被竞争对手消灭的事情非常少见，因而你大可不必为此担心，除非竞争对手有办法让用户远离你。</p>

<p>　　如果你不确定，去问问用户。你是否太晚是由是否有用户需要你所做的东西所决定的。如果你有竞争对手没有而用户又需要的东西，那么你就有了领先的机会。</p>

<p>　　问题是你是否需要去争取领先。如果你所做的事情未来许多人都会做，那么不管这件事情多么小，你都应该坚持去做它。例如，如果你的应用只能在最新款的手机上运行，而竞争对手无法做到这点，这就是一次机会。</p>

<p>　　当面临竞争者时，错误也会随之出现。缺少经验的创始人通常给予竞争者太多信任。要知道，你的成功与否主要取决于你，而不是你的竞争对手。在一个好的点子上遇到竞争对手比在坏点子上没有竞争对手要好得多。</p>

<p>　　不要担心自己将进入一个对手众多的领域，你要坚信自己会注意到其他人忽略的地方，这是一个非常好的开始，谷歌就是一个有力的例证。一个充斥着竞争对手的领域表示那里存在需求，并且没有好的解决方案出现。初创企业不能幻想着自己进入一个足够大的市场，并且那里没有竞争对手。因此任何成功的初创企业要么进入一个充满竞争对手的市场，但是自身拥有秘密武器，要么进入一个看起来很小但之后会变大的市场(例如微软)。</p>

<h4>筛选</h4>

<p>　　当你在寻找创业点子时，记得关闭另外两个筛选条件：不吸引人和费劲。</p>

<p>　　绝大多数程序员脑海中的创业过程是这样的：写几行牛逼闪闪的代码，放到服务器上，然后就坐等收钱。他们可能不愿意处理枯燥无味的琐事或者牵扯进乱糟糟的现实世界中，理由是这些事情会拖慢进程。但是这样的偏好广泛传播导致一些不错的创业点子的空间被大为压缩。如果你愿意在这些无聊乏味的点子上花些心思琢磨，极有可能发现有价值的点子等待实现。</p>

<p>　　在线支付公司Stripe就是一个关闭费劲筛选条件而受益匪浅的好例子。曾经有无数的程序员有过这个点子，也曾有无数的程序员知道付款的过程是多么痛苦，但是当他们寻找创业灵感时，他们并没有看到这一点，因为他们在无意识中逃避和支付打交道。对Stripe来说，支付同样是一件进展缓慢的事，但绝不是无法容忍的。事实上他们可能痛苦还少些，因为和支付打交道的恐惧让绝大多数人远离这个领域，同样他们也不用费劲心思让用户知道自己，因为这些绝望的用户都在眼巴巴地等着他们的产品。</p>

<p>　　不吸引人筛选条件和费劲筛选条件有相似之处，只不过前者是让你远离那些你瞧不上的问题，而后者是你惧怕的问题，通常后者比前者对你的影响更加大，因为费劲筛选条件更像是一种幻觉，即便不是，那也是一种更为严重的自我沉溺。进行创业意味着付出相当多的劳动，即使产品可能并不需要很多的努力，不过，你还是有很多琐事要做，比如和投资人打交道，招聘和解雇员工等等。所以如果你有一个不错的点子但是担心费时费力，那么你要知道，任何一个点子其实都要花费精力。</p>

<h4>窍门</h4>

<p>　　当寻找创业点子时，从你擅长的领域开始是个不错的选择。如果你是个数据库专家，那么就不要想着为年轻人开发一款聊天应用，就算这是个不错的点子，你也不能相信自己的判断，而对那些跟数据库有关系的点子，你可以充分相信自己的判断力。如果你觉得在数据库领域想个好主意有点困难，那是因为你的知识体系提高了你的标准，这其实是一种邓宁-克鲁格效应，即认知偏差现象。</p>

<p>　　从你需要的地方寻找点子是最有效的。</p>

<p>　　一般来说，问问自己是不是有什么东西让自己的需要和别人不同，与众不同是非常好的。</p>

<p>　　如果你改变了点子，想想是否发现了任何需求，一些大的创业公司就是这样起步的，Hotmail就是因为它的创始人在日常工作中记下了一些关于之前创业公司的点子而开始的。</p>

<p>　　保持年轻是不同寻常的特别方法，最有价值的新点子往往来自人的青年时代。只有年轻人才知道自己同辈人最需要什么，如果没在大学校园中呆过，很难想象会有创建Facebook的点子。所以如果你是年轻创业者，那么想想有没有你和你的朋友想做但是目前技术并没有提供帮助的东西。</p>

<p>　　一种确保你解决好别人难题的方法就是把这些问题当做自己的，当Rajat Suri 决定做一款餐厅软件的时候，他找了个招待的工作去了解餐厅是如何运作的。这看起来有点极端，不过创业就意味着极致。</p>

<p>　　事实上，发现好的点子不只是关掉这些筛选条件，而是寻找那些不吸引人和让人感到困难的点子，一个好的方法是，问问自己希望别人做些什么你可以使用，你愿意付钱。</p>

<p>　　创业之初，往往选择为那些规模较小但是又很重要的用户服务，如果是那些大公司不屑的领域就更好了，因为这往往会误导他们的判断。举例来说，在斯蒂夫•沃兹尼亚克(Steve Wozniak)开发出苹果一代之后，他觉得有义务告诉他当时的雇主惠普公司，不过幸运的是，惠普拒绝了他，理由之一是惠普当时使用电视机作为显示器。</p>

<p>　　寻找创业点子是一门非常微秒的学问，这也是绝大多数尝试的人都失败的原因。单纯地思考创业点子并没有很大效果，最有效的方法往往是更为间接的：如果你有好的行业背景，好的创业点子可能容易想到，不过这也不是立即就会有的。注意到缺少什么会花费很长时间。</p>

<p>　　生活在未来，做有趣的事，听起来可能很奇怪，不过这才是真正的创业良方。</p>
]]></content>
  </entry>
  
</feed>

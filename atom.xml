<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Ajia's Blog]]></title>
  <link href="http://ajia.github.com/atom.xml" rel="self"/>
  <link href="http://ajia.github.com/"/>
  <updated>2014-05-31T14:32:38+08:00</updated>
  <id>http://ajia.github.com/</id>
  <author>
    <name><![CDATA[Ajia]]></name>
    <email><![CDATA[DerekLunt@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[rework-要成就事业，不能只是创业]]></title>
    <link href="http://ajia.github.com/blog/2014/05/31/rrework-yao-cheng-jiu-shi-ye-%2Cbu-neng-zhi-shi-chuang-ye/"/>
    <updated>2014-05-31T14:18:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/31/rrework-yao-cheng-jiu-shi-ye-,bu-neng-zhi-shi-chuang-ye</id>
    <content type="html"><![CDATA[<!--more-->


<p>啊，创业了！有这样一种公司，他们在启动的时候往往备受瞩目（尤其是在科技领域）。</p>

<p>创业是一块神奇的地域，创业的时候，花钱是别人的事情，令人烦恼的收入问题也不会在此时来败兴。你可以在初创时期一直花别人的钱，直到你找到自己的盈利之路。此处不讲求经营法则。</p>

<p>这个神奇之地的问题在于，它是个神话。而真相是业务不论新老，都是由相同的市场力量和经济规则所主导。人们得创造收入，承担花销，公司要么盈利，要么倒闭。</p>

<p>有些创业公司会无视这一现实。这些公司的经营者们努力拖延着，不愿意面对那些不可避免的现实，例如，成长、盈利、成为一个真正能够可持续发展的企业。</p>

<p>任何人如果在创业初期抱着“我们以后会想到办法赚钱”的态度，他们的创业终将成为笑谈。这就好像在开始制造太空船时，自欺欺人地说“让我们假设地心引力不存在”一样可笑。无法通往盈利之路的事业不能称为事业，只是嗜好。</p>

<p>所以，创业之初不要有任何依赖思想。相反，要创立真正的事业。真正的事业永远与现实的问题息息相关，比如说账单和员工薪水。真正的事业从创始的第一天开始就要求你去操心如何盈利的问题。真正的事业拒绝创业者用“没关系，创业嘛！”这样的借口去掩盖深层次的问题。一开始就要去做真正的事业，这样才能大大提高成功率。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-你的需求没有想象的那么多]]></title>
    <link href="http://ajia.github.com/blog/2014/05/29/rework-ni-de-xu-qiu-mei-you-xiang-xiang-de-na-yao-duo/"/>
    <updated>2014-05-29T22:06:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/29/rework-ni-de-xu-qiu-mei-you-xiang-xiang-de-na-yao-duo</id>
    <content type="html"><![CDATA[<!--more-->


<p>你真的需要雇10个人吗，还是先雇2~3个应付当前局面就可以了？</p>

<p>你真的需要50万美元吗，还是目前只要5万或5000就够了？</p>

<p>你真的需要花6个月时间吗，还是可以同时进行两件事情？</p>

<p>你真的需要一间大办公室吗，还是可以暂时和别人共用一间办公室或在家办公？</p>

<p>你真的需要一个仓库吗，还是可以租一个小的存储室（也可以利用你的车库或地下室）或是把这部分工作完全外包？</p>

<p>你真的需要投放广告或聘请公关公司吗，有没有其他方法进行推广？</p>

<p>你真的需要建一个工厂吗，还是可以让其他人来生产你的产品？</p>

<p>你真的需要会计吗，还是可以自己用Quicken软件记账？</p>

<p>你真的需要IT部门吗，还是可以把这部分工作外包？</p>

<p>你真的需要招一个全职的技术支持人员吗，还是你可以亲力亲为？</p>

<p>你真的需要开一家零售店吗，还是可以在网上销售？</p>

<p>你真的需要漂亮的名片、公司信签和产品图册吗，还是可以先放弃这些？</p>

<p>现在你明白我的意思了？也许你最终会需要去走大手笔、高消费的路线，但不是现在。</p>

<p>节俭不是罪过。当我推出第一个产品时，是非常节省的。我们没有自己的办公室，得和其他公司共用办公空间。我们没有一堆服务器，只有一台。我们没有做广告，只是通过网上经验分享来传播。我们没有雇佣专人来回复客户邮件，公司的创始人亲自答复客户邮件。一切都运作良好。</p>

<p>伟大的公司基本上都起于微末。你的也一样。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-万不得已不筹资]]></title>
    <link href="http://ajia.github.com/blog/2014/05/28/rework-mo-bu-de-yi-bu-chou-zi/"/>
    <updated>2014-05-28T22:49:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/28/rework-mo-bu-de-yi-bu-chou-zi</id>
    <content type="html"><![CDATA[<!--more-->


<p>创业之初的问题之一就是：种子资金从哪里来？人们常常认为需要从外部凑钱。如果你创办的是一家工厂或是一家餐厅，那么你可能的确需要引进外部资金。但是很多公司根本不需要花这么多钱去铺设基础设施——尤其是在今天。</p>

<p>如今我们身处在服务型经济的大潮之中。想要从事服务行业（例如，咨询、软件公司、婚庆策划、平面设计以及数百种其他行业），门槛已经相当低了。如果你想创办一家这样的公司，千万别花别人的钱。</p>

<p>事实上，不管你创办的是什么类型的企业，都要尽可能少花别人的钱。花别人的钱听起来很美，实际上你落入了圈套。理由如下：</p>

<p><strong>失去控制权。</strong>花别人的钱就得听人家的。一开始大家一团和气，还不错。但是接下来会发生什么？你创立自己的事业就是为了听别人指手画脚吗？用别人的钱只会让你束手束脚。</p>

<p><strong>“套现离场”的想法会压倒“创建优秀公司”的梦想。</strong>投资人想拿回他们的钱——越快越好（通常是3~5年）。一旦合伙人脑子里只想着快点把钱套现出来，长期的可持续发展就成了泡影。</p>

<p><strong>用别人的钱容易上瘾。</strong>再没有比花别人的钱更痛快的事情了。但是等你花光了再去要时，每去一次，他们就会从你的手中多拿走一些股份。</p>

<p><strong>融资都不是好买卖。</strong>当你刚刚起步时，在谈判中完全没有优势。在财务交易中往往举步维艰。</p>

<p><strong>客户不再荣登“图腾柱”。</strong>花别人的钱，会使你的事业最终去迎合投资人，而不是客户。</p>

<p><strong>筹钱极其费神。</strong>融资是一件困难重重、耗费精力的事情。得花费数月时间开会讨论、研究法律、签订合同，等等。这些烦琐的事情会浪费你大量的精力，而这些时间本来就应该被用于创建伟大的事业。</p>

<p>真的很不值。我们一次又一次地听说那些企业老板对选择这条路感到后悔不已。他们的融资血泪史大同小异：一开始，你得到的承诺是钱很快就能到位。但是当你开始和投资人以及董事会谈判时，你就会有种“可恶！我到底在这干什么？”的感觉。现在是由别人来发号施令了。</p>

<p>在把脖子伸进绞索之前，赶快找点其他法子吧。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-不可能的宗旨]]></title>
    <link href="http://ajia.github.com/blog/2014/05/27/rework-equals-bu-ke-neng-de-zong-zhi/"/>
    <updated>2014-05-27T22:25:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/27/rework-equals-bu-ke-neng-de-zong-zhi</id>
    <content type="html"><![CDATA[<!--more-->


<p>在“真正坚定立场”和“在宣言书中声称自己秉持某种立场”之间，是有天壤之别的。你知道，那些“提供最佳服务”的标语，仅仅是人们做出来贴在墙上的噱头。这些口号听上去虚情假意、脱离现实。</p>

<p>假设你站在一家汽车租赁公司里，房间里很冷，地毯很脏，前台没有人，然后你看到一张皱巴巴的、贴着剪贴画的纸张贴在公告栏里，上面写着公司的宗旨：</p>

<blockquote><p>我们的任务是提供轿车及商务车出租、租赁、销售等客户所需的服务。我们要提供超出客户预期的服务、品质和价值。</p>

<p>我们将努力赢得客户的长期信赖。为此我们将为客户提供承诺的服务，力求公平和诚信，我们愿意为了打造独特的个性化服务和令人愉悦的客户体验而多行一步。</p>

<p>我们将支持员工的发展和个人成长，并对员工的成就和贡献给予丰厚的回报，以激励员工努力为客户提供独到的服务。</p></blockquote>

<p>这些“宗旨”就这样喋喋不休的继续着，你坐在那里一边读着这些废话一边寻思：“他们当我是傻子吗？”纸上的那些东西和现实体验完全不搭界。</p>

<p>这就好像是当你打电话到一家公司时，接线的是一个语音应答机，不断地在电话那头告诉你他们公司如何如何重视客户。果真如此？那就多雇些技术支持人员好了，不要让人在电话边苦等30分钟后才获得帮助。</p>

<p>或者一言不发也行，就是别拿一个自动语音应答机来糊弄我，说你们多关心我。那不过是个机器人而已。一种是真情实意，另一种是被设定成只说好话的机器人，我非常清楚这其中的差别。</p>

<p>坚守某种信念并不仅仅是把它写下来。不但要相信它，还要让它成为你的生活方式。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-画沙为界，立场明确]]></title>
    <link href="http://ajia.github.com/blog/2014/05/25/rework-wei-jie-%2Cli-chang-ming-que/"/>
    <updated>2014-05-25T14:22:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/25/rework-wei-jie-,li-chang-ming-que</id>
    <content type="html"><![CDATA[<!--more-->


<p>起步之后，你必须一直牢记自己到底为什么要做这件事情。有主见方能成大事，创业并不只是一个产品或一项服务那么简单。你必须心怀信念，要有主心骨，要了解自己到底是为什么而奋斗，并且要让世人明白你的信念。</p>

<p>坚定的信念能为你赢得超级粉丝，他们会唯你马首是瞻，会舍身保护你，他们充满激情的口碑传播将胜过世上的一切广告。</p>

<p>强大的主见也是要付出代价的。在这个过程中你得解雇某些人，他们会诋毁你，说你傲慢、冷漠。没办法，这就是人生，有人喜欢你，就会有人憎恨你。如果你的说法没有引起任何人的心烦意乱，只能说明你的推广能力不够。（也可能代表你比较无趣。）</p>

<p>很多人讨厌我们，因为我们的产品功能不像竞争对手那么多。因为我们拒绝在软件中添加他们宠之有加的特色功能，而让这些人恼羞成怒。然而，对于我们来说，我们的产品所不能处理的和我们的产品所能处理的一样令人感到骄傲。</p>

<p>我们追求简洁的设计，因为大多数软件都过于复杂：太多特性、太多按钮、太多困惑。我们要做与之不同的软件。如果我们的产品不适合每一个人，没有关系，我们愿意为了那些更加深爱我们产品的客户而放弃另一部分客户。这就是我们的立场。</p>

<p>如果连你都不知道自己到底相信什么，那么一切都会成为悖论，你做任何事都能被人反驳。然而，一旦你的立场坚定了，那么该如何决策就显而易见了。</p>

<p>例如，全食超市（Whole Foods）坚持向顾客销售最优质、最天然的有机食品。他们绝不会浪费时间去一遍遍地讨论该如何决策。没有人会问：“我们能卖些带人造香料的产品吗？”毋庸置疑，答案非常明确。这就是为什么人们在这家公司买不到可口可乐或士力架的原因。</p>

<p>这种信念就意味着全食超市出售的食物更昂贵。有反对者甚至称其为“全额支票”（Whole Paycheck），并讥笑那些光顾该食品店的人。但那又怎样？全食超市的生意照样出奇的好。</p>

<p>另一个例子是坐落在芝加哥街头的维尼夹馅面包店（Vinnie&#8217;s Sub Shop），就在我们公司楼下。他们在优质的面包（一种类似于赛百味的夹馅面包）上涂抹自制的罗勒酱，然后出售。想要吃他家的面包，你最好早点儿去。想知道他们啥时候关门？柜台里的女士会告诉你：“面包卖完了我们就收工。”</p>

<p>真的吗？“没错，我们都是一大早从街边的面包房进货，拿最新鲜的面包回来做原料。这批面包一卖光（通常是下午2~3点左右），我们就关门。我们当然也可以再去进一批面包回来接着做生意。但这批面包就不如早上的新鲜了。如果面包不新鲜，就做不出绝味的三明治。如果不能卖让我们倍有面子的食物，那那赚再多钱又有什么意思呢？”</p>

<p>和街头的普通三明治餐厅相比，你是不是更愿意到这样一家店里就餐呢？</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-“没时间”不是借口]]></title>
    <link href="http://ajia.github.com/blog/2014/05/24/rework-mei-shi-jian-bu-shi-jie-kou/"/>
    <updated>2014-05-24T23:20:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/24/rework-mei-shi-jian-bu-shi-jie-kou</id>
    <content type="html"><![CDATA[<!--more-->


<p>人们最常用的借口就是：“时间不够。”他们声称自己非常想开一家公司、学习一种乐器、推广一项发明、写一本书，等等，但就是没有时间去做。</p>

<p>拜托，只要你善加利用，时间总是有的，你也根本无须辞职去做什么事情，白天好好上你的班，晚上再来干你自己的私人项目就好了。</p>

<p>把看电视或玩魔兽的时间腾出来完成你的创意；把10点上床改成11点上床，我们不是怂恿你通宵达旦或一天干足16个小时——我们要说的是，每周匀出一些业余时间来，就足够你去做些事情了。</p>

<p>一旦这样去做了，你就会明白自己的激情和兴趣到底是真心实意，还是三分钟热度。万一不成，你照样回去每天上你的班就好了。不必承担任何风险，没有任何损失，只是浪费了一点时间而已，还是挺划算的。</p>

<p>当你拥有某种极强烈的渴望时，你就能挤出时间了——不管你身上是否还背负着其他责任。事实上，大部分人的渴望并不是那么强烈。于是他们拿时间当借口来进行自我保护。不要再扔出一堆借口来妄图脱身了，你的终极职责就是让你自己的梦想成真。</p>

<p>另外，永远不会有正当其时的时候，你总会觉得要买年纪太轻，要么太老，要么太忙，抑或是其他什么原因。如果你总是为找不到完美的时刻而困扰，那么，完美的时机永远不会出现。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-着手做点什么]]></title>
    <link href="http://ajia.github.com/blog/2014/05/23/rework-zhao-shou-zuo-dian-shi-yao/"/>
    <updated>2014-05-23T22:56:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/23/rework-zhao-shou-zuo-dian-shi-yao</id>
    <content type="html"><![CDATA[<!--more-->


<p>我们身边总会有这样的朋友，自怨自艾感叹命运不公：“我对eBay早有创想，可惜当初没下手，否则我现在也是个亿万富翁了！”这个逻辑很可悲，也很虚妄。你头脑中有eBay的创意和你实际去创建eBay那是一点关系也没有的。在你的人生中真正有意义的是你做了什么，而不是你想过什么、说过什么或者计划过什么。</p>

<p>你觉得自己的想法很有价值？那么就试试把它卖掉，看看能有什么收获。基本上你什么也得不到。想法如果不付诸实施，那就永远只能是一个想法而已，每个人都有奇思妙想。</p>

<p>斯坦利.库布里克（Stanley Kubrick）曾今这样激励电影制片人：“找个摄像机和一些胶片吧，随便拍个什么样的片子出来都成。”库布里克明白，当你刚开始一项工作时，你必须开始创造自己的东西。最重要的事情就是起而行之。所以，拿起摄像机，灌张唱片，开始拍摄吧。</p>

<p>创意这玩意，价廉物美，应有尽有。最开始的鼓槌音高的创意也不过是业务中几乎可以被忽略的极小一部分。真正的问题在于你执行的好坏。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-挠自己的痒处]]></title>
    <link href="http://ajia.github.com/blog/2014/05/22/nao-zi-ji-de-yang-chu/"/>
    <updated>2014-05-22T22:52:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/22/nao-zi-ji-de-yang-chu</id>
    <content type="html"><![CDATA[<!--more-->


<p>想要创造一个伟大的产品或某项卓越的服务，最简单直接的办法就是做你自己想用的东西。设计你了解的产品——你就能很快发现它到底好不好用。</p>

<p>在37signals，我们为自己的业务需要来开发产品。例如，我们需要一个软件来跟踪记录我们和谁交流过、说了什么以及何时需要下一步的跟进。于是我们开发了自己的联络管理软件——Highrise。不需要核心团队、市场调研，也不需要经纪人。就像自己觉得身上痒痒了，就自己挠挠。</p>

<p>一旦发明一种产品或服务，你每天就得为上百个微不足道的决策去劳神费力。如果是帮别人解决问题，就会像瞎子一样在黑暗中不断摸索。但如果你解决的是自己的问题，希望之光就出现了。你非常清楚怎样做才是正确的。</p>

<p>詹姆斯.戴森（James Dyson）就是一位自产自销的发明家。当他打扫房间时，发现袋式真空吸尘器总是失灵——灰尘总把袋子里的气孔堵塞，阻断气流。这不是随便什么人凭空想象出来的问题，恰恰就是他本人的亲身经历。为了解决自己的问题，世界上第一个免纸袋涡卷式真空吸尘器诞生了。</p>

<p>维克.福尔兹（Vic Firth）在波士顿交响乐团演奏定音鼓时，突发奇想要做一只更好的鼓槌。当时市面上卖的鼓槌都不能达到预期的效果，于是他就开始在自家的地下室制作鼓槌并进行销售。然后，有一天，他把一把鼓槌掉在了地上，听到每一只鼓槌的声音都不一样，从那时起，他就开始按照含水量、重量、密度以及音高来配对鼓槌，确保每一对鼓槌都能达到最佳适配水平。结果就有了他如今的产品口号：“绝配的一对。”维克.福尔兹的工厂每天至少要生产85000只鼓槌，市场占有份额达到62%。</p>

<p>田径教练比尔.鲍尔曼（Bill Bowerman）认为他的队员需要更好、更轻的跑鞋。于是他走出训练场，在工作室里尝试着往家用蛋奶烘饼模具里注入橡胶，于是耐克最著名的鉄模鞋底便应运而生了。</p>

<p>这些人解决了自己的燃眉之急，同时也发现了他们的需求背后隐藏着一片巨大的市场，这就是你应该去做的。</p>

<p>自产自销的好处还在于，你可以快速直接的评估产品的质量，而不需要去了解别人的反馈意见。</p>

<p>玫琳凯化妆品的创始人玫琳凯.瓦格纳（Mary Kay Wagner）就是通过亲身使用才确定她的护肤品的质量是一流的。她是从一家本地的美容师那里得到这个产品的，这位美容师在家调制秘方，专为患者、亲属和朋友服务。当这位美容师过世后，瓦格纳从这家人手里买下了秘方。她不必组织测试团队来试用产品，也无须做任何市场调研，只要看看自己的皮肤就好了。</p>

<p>这种“解决自己实际问题”的方法最大的优势就在于能让你爱上自己的产品。你十分了解其中存在的问题以及其价值所在。除此之外别无他途。毕竟你（很有可能）会为这件事奋斗很多年，甚至付出余生，所以，最好还是做自己真正关心的东西。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-在宇宙中留下你的足迹]]></title>
    <link href="http://ajia.github.com/blog/2014/05/21/rework-zai-yu-zhou-zhong-liu-ni-de-zu-ji/"/>
    <updated>2014-05-21T07:23:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/21/rework-zai-yu-zhou-zhong-liu-ni-de-zu-ji</id>
    <content type="html"><![CDATA[<!-- more -->


<p>欲成大事，就要让自己与众不同，要在宇宙中留下有意义的一笔，要让世人知道你在做的是一件重要的事情。</p>

<p>你不必去攻克癌症，只要冲着有价值的方向去努力，要让你的客户说：“这个东西让我的生活变得更美好了。”如果你不做这件事了，人们就会觉得不对劲。</p>

<p>同时，做这件事，你还要有紧迫感。人的一生是有限的，而这件事就应该是你愿意毕生而为的工作。难道你愿意终生复制别人的产品或者只是搭配、组合别人发明的东西吗？你应该创造你独有的传承。不要只是坐在原地等着别人来为你作出改变，不要以为你得需要一个大团队才能做出一番别样的事业来。</p>

<p>看看著名网站Craigslist吧，这家颠覆了传统的分类广告业务的著名网站，其员工人数只有区区几十人而已，而公司每年的收入却达到了几千万美元，是互联网上最受欢迎的网站之一，给整个报刊行业带来了重大打击。</p>

<p>马特.德拉吉打造的德拉吉报道（The Drudge Report），只是他自己一个人运营的一个简单网页而已，然而这个简单的网页却对新闻行业带来了深远的影响——电视从业者、电台脱口秀主持人以及报社记者都将其视为发掘新故事的“必去之地”。</p>

<p>要做就做举足轻重的事情，这些小人物发迹于草莽，却破坏了已经存在了数十年的传统模式。你也能在自己的行业里做出同样的壮举。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-受够了“企业家“]]></title>
    <link href="http://ajia.github.com/blog/2014/05/19/rework-shou-gou-liao-qi-ye-jia/"/>
    <updated>2014-05-19T22:41:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/19/rework-shou-gou-liao-qi-ye-jia</id>
    <content type="html"><![CDATA[<!--more-->


<p>让“企业家”这个过气的称谓退出历史舞台吧，它已经背负了太多沉重的负担。它给人的感觉就像是一个实行会员准入制度的私人俱乐部，不是谁都能进的。我们应该鼓励每一个人都去开创自己的事业，不要让这等好事只落在那些凤毛麟角、自认为自己才是企业家的人头上。</p>

<p>有这样一群新生代开始走出来创业了。尽管他们获利，但谁也不认为自己是企业家。他们当中的很多人甚至不认为自己是企业主。他们只是在用自己的方式做自己喜欢做的事情，并从中获得回报。</p>

<p>那么，让我们把这个听起来很好的称谓替换成一个更加脚踏实地的说法吧，不要再叫别人企业家了，管他们叫创始人吧。每个创立了自己事业的人都是创始人。你不需要拥有MBA头衔、资质证书、西装革履以及公文包，甚至无须承担常人所不能承受的风险。你所需要的只是一个创意，加一点点自信，以及一点勇气，就可以启程了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-工作狂]]></title>
    <link href="http://ajia.github.com/blog/2014/05/18/rework-gong-zuo-kuang/"/>
    <updated>2014-05-18T22:23:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/18/rework-gong-zuo-kuang</id>
    <content type="html"><![CDATA[<!--more-->


<p>沉迷工作是企业文化中广受赞颂的一种“优良做派”。我们知道工作狂热衷于通宵达旦、加班加点，甚至在办公室打地铺。这些人以累死在项目中为荣，对他们来说，再大的工作量也不在话下。</p>

<p>工作狂的行为不但没有必要，而且愚蠢至极。过多的工作并不代表你对项目更关注，也不代表你作了更多贡献，这仅仅意味着你干了更多活而已。</p>

<p>工作狂能够解决一些问题，但他们制造的麻烦却更多。首先，这种工作状态经不起时间的考验。当职业倦怠感袭来时——这一点基本不可避免——你根本没法“软着陆”。</p>

<p>工作狂往往不得要领。他们花费大把的时间去解决问题，他们以为能靠蛮力来弥补思维上的惰性，其结果就是折腾出一堆粗略无用的解决方案。</p>

<p>不仅如此，他们还凭空制造出危机来。这些人从不寻求高效解决之道，因为他们恰恰就“钟情于”加班加点。这让他们感觉自己像个英雄，并沉迷其中。他们（通常是无意识地）制造问题，看似这样就能享受更多的工作了。</p>

<p>工作狂的存在使那些不以加班为乐的员工感到无所适从。在工作狂扎堆的企业环境里，就连“按时上下班”都让人觉得是一种无理要求了。这种文化令正常工作的员工心怀愧疚、士气低落。不仅如此，人们还会因此陷入一种“跟风”状态——每个人都在义务加班，根本就不管到底有没有生产力。</p>

<p>如果你只是为了工作而工作，那么你就会丧失判断力。你的价值观和决策方式都是扭曲的。你没有能力去判断哪些工作值得做、哪些工作该放弃，最后搞得自己筋疲力尽，而一个筋疲力尽的人是无法作出明智的决定的。</p>

<p>最后，工作狂实际取得的成就并不比正常人高。他们自诩为完美主义者，但这仅仅代表他们浪费了大量时间去关注次要的细节，而不是推动下一项任务。</p>

<p>工作狂不是英雄。他们没有力挽狂澜，不过是浪费时间而已。真正的英雄早已想出办法、搞定一切，然后回家了。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-何必壮大？]]></title>
    <link href="http://ajia.github.com/blog/2014/05/16/rework-he-bi-zhuang-da-%3F/"/>
    <updated>2014-05-16T21:30:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/16/rework-he-bi-zhuang-da-?</id>
    <content type="html"><![CDATA[<!--more-->


<p>人们往往会问：“你的公司有多大？”话题虽小，可人们期待的答案却不是越小越好。这个数字越大，你给人留下的印象就越深刻、越专业、越强大。如果你说你有100多名员工，他们会欢呼雀跃：“哇！太棒了！”如果你的公司规模不大，你就会听到言不由衷的：“哦&#8230;&#8230;还不错啊。”前者是恭维，而后者仅仅是礼节而已。</p>

<p>为什么会这样？与企业成长和业务有何关联？为什么总把扩张当做奋斗目标？除了满足虚荣心外,“大”还有什么好处？（你最好能给我一个比“规模经济”更好的答案。）选择并保持合适的规模又有何不妥？</p>

<p>我们会不会对着哈佛和牛津指手画脚说：“如果它们能扩大规模、开设分校、广聘名师、全球运营、开立分校&#8230;&#8230;之后，它们就能成为伟大的学校。”当然不会。这些都不是我们评估名校的标准。那又为什么要用这些标准来衡量一个企业呢？</p>

<p>也许你的公司的最佳规模就是5个人，也可能是40个人，也可能是200个人。也没准只要你一个人加一台笔记本电脑就成。不要提前幻想自己要做到多大规模，要慢慢发展，走一步看一步——时机未到就大肆拉人入伙的做法使很多公司走上了绝路。同时还应该避免井喷式成长——这会使你扩张过头，错过最佳规模。</p>

<p>小公司并不只是一块跳板。小公司本身就是一个伟大的目标。</p>

<p>你有没有发现小公司都想要变大，而大公司却梦想变得更敏捷、更灵活？记住，一旦公司做大了，要想再缩小，就在所难免地要进行裁员。打击士气，还要完全改变业务模式。</p>

<p>你完全没有必要把向上爬作为你的目标。我们要谈的也不只是你的员工人数，还包括你的花销、房租、IT设施、办公家具，等等。这些事情并不会主动找上你，而是由你自己决定要不要背上这些东西。由于背负了庞大的开销，你只能强迫自己创立一种很复杂的业务模式——它运营起来更加困难，更加紧张。</p>

<p>不要因为瞄准小公司就觉得缺乏安全感。无论是谁，只要他所运营的公司能够持续发展、保持盈利，不管规模大小，都是值得骄傲的。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-计划即瞎猜]]></title>
    <link href="http://ajia.github.com/blog/2014/05/14/rework-ji-hua-ji-xia-cai/"/>
    <updated>2014-05-14T23:07:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/14/rework-ji-hua-ji-xia-cai</id>
    <content type="html"><![CDATA[<!--more-->


<p>除非你是个预言家，否则那些长期的商业计划就是痴人说梦。你不能掌控的因素太多了：市场环境、竞争对手、客户群体、经济状况，等等。撰写计划会让人感觉自己把握住了某些东西，但实际上这都是完全不可控的。</p>

<p>为什么我们不直截了当地按照计划的本质来称呼它呢？管它叫“猜想”吧。现在我们就开始把你的商业计划称为“商业猜想”，把财务计划叫做“财务猜想”，把战略计划命名为“战略猜想”。现在咱们就可以不用为这些玩意儿操那么多心了。在这方面操心只能是得不偿失。</p>

<p>当你把猜想变成计划，就等于走进了危险地带。做计划就是在用过去推动未来，等于给你戴上了眼罩。“这就是我们要做的，嗯，因为我们说过要这么做的。”问题是：计划和即兴发挥不会合拍。</p>

<p>你必须能够即兴发挥，你必须抓住每一个迎面而来的机遇。有时候你得说服自己：“我们要换个方向了，因为现在这么做比较靠谱。“</p>

<p>长期计划中的时间也纯属无稽之谈。你只有在做一件事的过程中，才能掌握更多的信息，没有人能够未卜先知。千万不要在行动之前就做出重大的决定。</p>

<p>这并不是说你应该无视未来，或者不应该对未来的挑战作未雨绸缪的准备。预防练习总是值得去做的。只是不要觉得自己必须把这些问题白纸黑字地写出来，或者为此纠结不休。大多数情况下，人们不会再多去看一眼自己长篇大论写下的计划，篇幅庞大的计划书最终都会成为文件柜里的化石。</p>

<p>放下你的臆测吧，现在就决定你这周要做什么，不必去管全年的计划。只要找出下一项最重要的任务，然后起而行之。在行动之前的一刻作决定，而不是早早就预先定下某事。</p>

<p>你也可以跳过这个决策过程，直接上飞机走人，到了目的地再去选一件漂亮的衬衣、一个刮胡膏以及牙刷。</p>

<p>无计划地工作看上去挺悬，但是盲目遵循不切实际的计划，后果则更可怕。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-哪来的从错误中学习]]></title>
    <link href="http://ajia.github.com/blog/2014/05/13/rework-na-lai-de-cong-cuo-wu-zhong-xue-xi/"/>
    <updated>2014-05-13T20:48:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/13/rework-na-lai-de-cong-cuo-wu-zhong-xue-xi</id>
    <content type="html"><![CDATA[<!--more-->


<p>在商业社会中，失败成了一种值得期待的典礼。你总能听到“新公司倒闭者十之八九”的说法。你还听说失败能铸造品性。人们常常建议你“早死早超生，失败多经验也多”。</p>

<p>空气中充斥着如此高浓度的失败理论，貌似除了沉沦其中，没有别的办法。千万不要相信这些观念！不要被这些观点愚弄了，其他人的失败仅仅代表其他人栽了跟头而已。</p>

<p>别人的东西卖不出去，与你何干？别人没法凝聚团队，又与你何干？别人的服务定价失当，又与你何干？别人挣的没有花的多&#8230;&#8230;那么，正好你来挣！</p>

<p>另外一种普遍的错误认知是：人要从错误中吸取经验教训。你到底能从错误中学到什么？你能学到的只是不再重蹈覆辙，但这有什么意义呢？你还是不知道下一步该做什么。</p>

<p>相比之下，你更应该从成功中汲取养分。成功才是真正靠得住的教材。做成一件事后，你会知道这条路行得通—然后就会再次这么做，而下一次，你也许还会做得更棒。</p>

<p>失败并不是成功的先决条件。一份来自哈佛商学院的研究报告表明，那些已经成功的企业家们再创造辉煌的可能性远比常人大得多（他们今后创办公司的成功率为34%）。而那些初次创业就失败的企业家们继续创业的成功率则与初次创业一样：只有23%。首战失败的人的成功率并不比那些从未尝试过的新人高。成功是一种极具现实的价值的宝贵经验。</p>

<p>不比感到惊讶：这就是自然规律。逗留在过去的失败中是无法进化的，进化是建立在成功的基础之上的。你也应该如此。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[rework-忘了现实世界]]></title>
    <link href="http://ajia.github.com/blog/2014/05/11/re-xian-shi-shi-jie/"/>
    <updated>2014-05-11T09:19:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/11/re-xian-shi-shi-jie</id>
    <content type="html"><![CDATA[<!-- more -->


<pre><code>”这在现实世界中完全行不通。“当你向人们介绍一个新创意时，人们总是这么说。

这个”现实世界“听起来如此令人沮丧，貌似所有的新创意、新提案以及外来概念总是会在”现实世界“中碰壁。在这里，能够立于不败之地的都是那些人们耳熟能详、习以为常的事物，即使这些东西以及漏洞百出或陈腐低效。

撕开这个”现实世界“的遮羞布后，你会发现栖居其中的人们都充满着悲观和绝望的情绪。他们期待看到新概念被斩落马下，他们认为这个社会还没有准备好迎接变革，也无力引发变革。

更糟的是，他们想给其他人灌迷魂汤，让人们也陷进他们的坟墓里。如果你对未来充满期待并野心勃勃，他们就会试图说服你不要为不可能实现的想法浪费时间。

不要相信他们。这个世界对于他们来说可能是”现实“的，但并不意味着你也要生活在这样的”现实“世界中。

我们了解这一点，因为我们的公司在很多方面就通过”现实世界“的测评。在”现实世界“中，你不可能让十几个员工在两个大洲的8个不同城市办公；在”现实世界“中，你不可能不靠任何销售人员或广告投放就赢得上百万的客户；在”现实世界“中，你不能将自己的成功秘诀透露给其他人。问题是这些我们都干了，并且干得轰轰烈烈。

”现实世界“并不存在，那只是个借口，只是某些人为了开脱自己的无所作为，跟你一点关系也没有。
</code></pre>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CMake找不到/Developer目录的问题]]></title>
    <link href="http://ajia.github.com/blog/2014/05/08/cmakezhao-bu-dao-slash-developermu-lu-de-wen-ti/"/>
    <updated>2014-05-08T18:49:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/08/cmakezhao-bu-dao-slash-developermu-lu-de-wen-ti</id>
    <content type="html"><![CDATA[<!-- more -->


<p>想学好OpenGL，已经复习C几周了。</p>

<p>网上有个教程，http://www.opengl-tutorial.org/zh-hans/tutorial-1-opening-a-window-zh/#______</p>

<p>照着上面说的做，在Mac上生成项目的时候遇到个问题：</p>

<pre><code>Error: No developer directory found at /Developer.  Run
/usr/bin/xcode-select to update the developer directory path. 
</code></pre>

<p>原来，我的Xcode的版本是4.6.3，/Developer这个目录已经改到/Applications/Xcode.app/Contents/Developer，执行这条命令就可以了</p>

<pre><code>sudo /usr/bin/xcode-select -switch /Applications/Xcode.app/Contents/Developer
</code></pre>

<p>然后，好好学习OpenGL。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac下制作Ubuntu安装U盘]]></title>
    <link href="http://ajia.github.com/blog/2014/05/06/macxia-zhi-zuo-ubuntuan-zhuang-upan/"/>
    <updated>2014-05-06T12:02:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/05/06/macxia-zhi-zuo-ubuntuan-zhuang-upan</id>
    <content type="html"><![CDATA[<!-- more -->


<p>步骤如下：</p>

<p>打开终端，把IOS镜像转换为DMG格式：</p>

<pre><code>HDIUTIL CONVERT -FORMAT UDRW -O ubuntukylin-13.04-desktop-i386 ubuntukylin-13.04-desktop-i386.iso
</code></pre>

<p>查看U盘的disk编号</p>

<p>不接入U盘的情况下在终端中输入 diskutil list</p>

<p>将U盘接入Mac，再次输入diskutil list</p>

<p>对比2次的输出，确定U盘的disk编号</p>

<p>我这里的disk编号是1</p>

<p>卸载USB盘（插入时已经自动挂载了），但是不要推出。在终端下：</p>

<pre><code>diskutil umountDisk /dev/disk1    
</code></pre>

<p>将dmg写入U盘</p>

<pre><code>sudo dd if=./ubuntukylin-13.04-desktop-i386.dmg of=/dev/rdisk1 bs=1m
</code></pre>

<p>推出USB盘。在上面复制之后，系统可能会报错，“此电脑不难读取能插入的磁盘”，不必理会，直接推出即可。也可以在终端下推出：</p>

<pre><code>diskutil eject /dev/disk1
</code></pre>

<p>使用该USB盘引导启动即可进行Linux的安装。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读《Lua程序设计》笔记--类型与值]]></title>
    <link href="http://ajia.github.com/blog/2014/04/19/du-luacheng-xu-she-ji-bi-ji-yu-zhi/"/>
    <updated>2014-04-19T18:30:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/04/19/du-luacheng-xu-she-ji-bi-ji-yu-zhi</id>
    <content type="html"><![CDATA[<!-- more -->


<h6>table的创建是通过“构造表达式”完成的，最简单的构造表达式就是{}。</h6>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="p">{}</span> <span class="c1">--创建一个table, 并将它的引用存储到a</span>
</span><span class='line'><span class="n">k</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">x&quot;</span>
</span><span class='line'><span class="n">a</span><span class="p">[</span><span class="n">k</span><span class="p">]</span> <span class="o">=</span> <span class="mi">10</span>  <span class="c1">--新条目，key=&quot;x&quot;, value=10</span>
</span><span class='line'><span class="n">a</span><span class="p">[</span><span class="mi">20</span><span class="p">]</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="s">great&quot;</span>  <span class="c1">--新条目, key=20, value=&quot;great&quot;</span>
</span><span class='line'><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="s2">&quot;</span><span class="s">x&quot;</span><span class="p">])</span>  <span class="c1">--&gt;10</span>
</span><span class='line'><span class="n">k</span> <span class="o">=</span> <span class="mi">20</span>
</span><span class='line'><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">k</span><span class="p">])</span>  <span class="c1">--&gt;&quot;great&quot;</span>
</span><span class='line'><span class="n">a</span><span class="p">[</span><span class="s2">&quot;</span><span class="s">x&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="s2">&quot;</span><span class="s">x&quot;</span><span class="p">]</span> <span class="o">+</span> <span class="mi">1</span>  <span class="c1">--递增条目&quot;x&quot;</span>
</span><span class='line'><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="s2">&quot;</span><span class="s">x&quot;</span><span class="p">])</span>  <span class="c1">--&gt;11</span>
</span></code></pre></td></tr></table></div></figure>


<h6>所有table都可以用不同类型的索引来访问值,当需要容纳新条目时，table会自动增长。</h6>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="n">a</span> <span class="o">=</span> <span class="p">{}</span>  <span class="c1">--空的table</span>
</span><span class='line'><span class="c1">--创建1000个新条目</span>
</span><span class='line'><span class="k">for</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="mi">10000</span> <span class="k">do</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">=</span> <span class="n">i</span><span class="o">*</span><span class="mi">2</span> <span class="k">end</span>
</span><span class='line'><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="mi">9</span><span class="p">])</span> <span class="c1">--&gt;18</span>
</span><span class='line'><span class="n">a</span><span class="p">[</span><span class="s2">&quot;</span><span class="s">x&quot;</span><span class="p">]</span> <span class="o">=</span> <span class="mi">10</span>
</span><span class='line'><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="s2">&quot;</span><span class="s">x&quot;</span><span class="p">])</span>  <span class="c1">--&gt;10</span>
</span><span class='line'><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="s2">&quot;</span><span class="s">y&quot;</span><span class="p">])</span>  <span class="c1">--&gt;nil</span>
</span><span class='line'><span class="n">a</span><span class="p">.</span><span class="n">x</span> <span class="o">=</span> <span class="mi">10</span>  <span class="c1">-- 等同于a[&quot;x&quot;] = 10</span>
</span><span class='line'><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">x</span><span class="p">)</span>  <span class="c1">-- 等同于print(a[&quot;x&quot;])</span>
</span><span class='line'><span class="nb">print</span><span class="p">(</span><span class="n">a</span><span class="p">.</span><span class="n">y</span><span class="p">)</span>  <span class="c1">-- 等同于print(a[&quot;y&quot;])</span>
</span><span class='line'><span class="c1">-- a.x和a[x]是不同的。前者表示a[&quot;x&quot;]，后者表示以变量x的值来索引table。</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[读《Lua程序设计》笔记--函数]]></title>
    <link href="http://ajia.github.com/blog/2014/04/19/du-luacheng-xu-she-ji-bi-ji/"/>
    <updated>2014-04-19T10:02:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/04/19/du-luacheng-xu-she-ji-bi-ji</id>
    <content type="html"><![CDATA[<!-- more -->


<p>a.多重返回值</p>

<p>Lua允许函数返回多个结果，只需在return关键字后列出所有的返回值即可</p>

<figure class='code'><figcaption><span>查找数组中的最大元素</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="k">function</span> <span class="nf">maximum</span><span class="p">(</span><span class="n">a</span><span class="p">)</span>
</span><span class='line'><span class="kd">local</span> <span class="n">mi</span> <span class="o">=</span> <span class="mi">1</span>  <span class="c1">--最大值的索引</span>
</span><span class='line'><span class="kd">local</span> <span class="n">m</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">mi</span><span class="p">]</span>  <span class="c1">--最大值</span>
</span><span class='line'>  <span class="k">for</span> <span class="n">i</span><span class="p">,</span><span class="n">val</span> <span class="k">in</span> <span class="nb">ipairs</span><span class="p">(</span><span class="n">a</span><span class="p">)</span> <span class="k">do</span>
</span><span class='line'>    <span class="k">if</span> <span class="n">val</span><span class="o">&gt;</span><span class="n">m</span> <span class="k">then</span>
</span><span class='line'>      <span class="n">mi</span> <span class="o">=</span> <span class="n">i</span><span class="p">;</span> <span class="n">m</span><span class="o">=</span><span class="n">val</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>  <span class="k">end</span>
</span><span class='line'><span class="k">return</span> <span class="n">m</span><span class="p">,</span> <span class="n">mi</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">print</span> <span class="p">(</span><span class="n">maximum</span><span class="p">({</span><span class="mi">8</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">23</span><span class="p">,</span><span class="mi">12</span><span class="p">,</span><span class="mi">5</span><span class="p">}))</span>  <span class="c1">--&gt;23  3</span>
</span></code></pre></td></tr></table></div></figure>


<p>b.变长参数</p>

<figure class='code'><figcaption><span>返回所有参数的总和</span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="k">function</span> <span class="nf">add</span><span class="p">(</span><span class="o">...</span><span class="p">)</span>
</span><span class='line'>    <span class="kd">local</span> <span class="n">s</span> <span class="o">=</span> <span class="mi">0</span>
</span><span class='line'>    <span class="k">for</span> <span class="n">i</span><span class="p">,</span><span class="n">v</span> <span class="k">in</span> <span class="nb">ipairs</span><span class="p">({</span><span class="o">...</span><span class="p">})</span> <span class="k">do</span>  <span class="c1">--ipairs({...})可以简写为ipairs{...}</span>
</span><span class='line'>        <span class="n">s</span> <span class="o">=</span> <span class="n">s</span> <span class="o">+</span> <span class="n">v</span>
</span><span class='line'>    <span class="k">end</span>
</span><span class='line'>    <span class="k">return</span> <span class="n">s</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="nb">print</span><span class="p">(</span><span class="n">add</span><span class="p">(</span><span class="mi">3</span><span class="p">,</span><span class="mi">4</span><span class="p">,</span><span class="mi">10</span><span class="p">,</span><span class="mi">25</span><span class="p">,</span><span class="mi">12</span><span class="p">))</span> <span class="c1">--&gt;54</span>
</span></code></pre></td></tr></table></div></figure>


<p>表达式“&#8230;”的行为类似于一个具有多重返回值的函数，它返回的是当前函数的所有变长参数</p>

<p>c.具名参数
虽然Lua不支持</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="n">rename</span><span class="p">(</span><span class="n">old</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">temp.lua&quot;</span><span class="p">,</span> <span class="n">new</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">temp1.lua&quot;</span><span class="p">)</span>  <span class="c1">--无效的演示代码</span>
</span></code></pre></td></tr></table></div></figure>


<p>这样的语法，但是可以将所有的实参组织到一个table中，并将这个table作为唯一的实参传给函数。当实参只有一个table的构造式时，函数调用中的圆括号是可有可无的：</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='lua'><span class='line'><span class="k">function</span> <span class="nf">rename</span><span class="p">(</span><span class="n">arg</span><span class="p">)</span>
</span><span class='line'>    <span class="k">return</span> <span class="nb">os.rename</span><span class="p">(</span><span class="n">arg</span><span class="p">.</span><span class="n">old</span><span class="p">,</span> <span class="n">arg</span><span class="p">.</span><span class="n">new</span><span class="p">)</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">rename</span><span class="p">{</span><span class="n">old</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">temp.lua&quot;</span><span class="p">,</span> <span class="n">new</span><span class="o">=</span><span class="s2">&quot;</span><span class="s">temp1.lua&quot;</span><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[curl用法(转)]]></title>
    <link href="http://ajia.github.com/blog/2014/04/18/curlyong-fa-zhuan/"/>
    <updated>2014-04-18T17:52:00+08:00</updated>
    <id>http://ajia.github.com/blog/2014/04/18/curlyong-fa-zhuan</id>
    <content type="html"><![CDATA[<!-- more -->


<p>curl可以模仿浏览器，可以当下载器，当你只是在处理一些shell工作时、测试，要图形界面干嘛？或者，要一个下载器干嘛。</p>

<p>基本用法（配合sed/awk/grep）</p>

<pre><code>$curl http: //bpsky.net
</code></pre>

<p>下载保存</p>

<pre><code>$curl http://bpsky.net &gt; index.html
$curl -o index.html http://bpsky.net
$curl -O http://bpsky.net/target.tar.gz
</code></pre>

<p>通过代理</p>

<pre><code>$curl -x  123.45 . 67.89 : 1080  -o page.html http://bpsky.net
</code></pre>

<p>保存cookie</p>

<pre><code>$curl -x  123.45 . 67.89 : 1080  -o page1.html -D cookie0001.txt http://bpsky.net
</code></pre>

<p>使用cookie</p>

<pre><code>$curl -x  123.45 . 67.89 : 1080  -o page1.html -D cookie0002.txt -b cookie0001.txt http://bpsky.net
</code></pre>

<p>模仿浏览器</p>

<pre><code>$curl -A  "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)"  -x  123.45 . 67.89 : 1080  -o page.html -D cookie0001.txt http://bpsky.net
</code></pre>

<p>伪造referer</p>

<pre><code>$curl -A  "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.0)"  -x  123.45 . 67.89 : 1080  -e  "mail.yahoo.com"  -o page.html -D cookie0001.txt http://bpsky.net
</code></pre>

<p>循环下载</p>

<pre><code>$curl -O http://cgi2.tky.3web.ne.jp/~zzh/screen[1-10].JPG
</code></pre>

<p>循环（匹配）下载</p>

<pre><code>$curl -O http://cgi2.tky.3web.ne.jp/~{zzh,nick}/[001-201].JPG  # &gt;like zzh/001.JPG
</code></pre>

<p>循环（引用）下载</p>

<pre><code>$curl -o #2_#1.jpg http://cgi2.tky.3web.ne.jp/~{zzh,nick}/[001-201].JPG # like &gt;001_zzh.jpg
</code></pre>

<p>断点续传</p>

<pre><code>$curl -c -O http://cgi2.tky.3wb.ne.jp/~zzh/screen1.JPG 
</code></pre>

<p>分块下载</p>

<pre><code>$curl -r  0 - 10240  -o  "zhao.part1"  http://cgi2.tky.3web.ne.jp/~zzh/zhao1.mp3 &amp;\ 
$curl -r 10241 - 20480  -o  "zhao.part1"  http://cgi2.tky.3web.ne.jp/~zzh/zhao1.mp3 &amp;\ 
$curl -r 20481 - 40960  -o  "zhao.part1"  http://cgi2.tky.3web.ne.jp/~zzh/zhao1.mp3 &amp;\ 
$curl -r 40961 - -o  "zhao.part1"  http://cgi2.tky.3web.ne.jp/~zzh/zhao1.mp3
...
$cat zhao.part* &gt; zhao.mp3
</code></pre>

<p>GET 上传</p>

<pre><code>$curl http://www.yahoo.com/login.cgi?user=nickwolfe&amp;password=12345  
</code></pre>

<p>POST 上传</p>

<pre><code>$curl -d "user=nickwolfe&amp;password=12345" http://www.yahoo.com/login.cgi
</code></pre>

<p>POST 文件上传</p>

<pre><code>$curl -F upload= $localfile  -F $btn_name=$btn_value http://cgi2.tky.3web.ne.jp/~zzh/up_file.cgi
</code></pre>

<h6>#（转自：http://www.cnblogs.com/bugY/archive/2012/06/05/2537030.html）</h6>
]]></content>
  </entry>
  
</feed>
